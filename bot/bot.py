from aiogram import Bot, Dispatcher, types, F
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.filters import Command
import asyncio
import os
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ .env, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))  # ‚úÖ Aiogram 3.x —Ñ–∏–ª—å—Ç—Ä
async def start(message: Message):
    # Extract referral parameter from /start command
    command_args = message.text.split(maxsplit=1)
    referral_param = command_args[1] if len(command_args) > 1 else None

    # Build Web App URL with referral parameter
    web_app_url = "https://dbdc-mini.dubadu.com/"
    if referral_param and referral_param.startswith('ref_'):
        web_app_url += f"?startapp={referral_param}"

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="–û—Ç–∫—Ä—ã—Ç—å DBDC Capital Forevers Bot",
            web_app=WebAppInfo(url=web_app_url)
        )]
    ])

    welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dubadu!"
    if referral_param:
        welcome_text += f"\nüéÅ –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!"

    await message.answer(welcome_text, reply_markup=kb)


# Handle any text message to always show the app button
@dp.message()
async def any_message(message: Message):
    # For any message, show the app button
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="–û—Ç–∫—Ä—ã—Ç—å DBDC Capital Forevers Bot",
            web_app=WebAppInfo(url="https://dbdc-mini.dubadu.com/")
        )]
    ])

    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:", reply_markup=kb)

async def main():
    logger.info("ü§ñ DBDC Capital Forevers Bot –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
