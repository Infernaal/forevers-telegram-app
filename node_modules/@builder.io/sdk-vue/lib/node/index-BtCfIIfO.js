import { defineComponent as y, openBlock as d, createElementBlock as h, Fragment as I, createBlock as S, resolveDynamicComponent as X, mergeProps as w, toHandlers as F, withCtx as O, renderSlot as V, resolveComponent as k, createTextVNode as Rt, toDisplayString as le, defineAsyncComponent as Y, createVNode as E, renderList as L, createCommentVNode as C, h as Ke, createElementVNode as z, normalizeStyle as M, normalizeClass as _, markRaw as Et } from "vue";
import { T as $, g as At, f as Pt, i as R, s as Bt, r as Vt, p as Nt, a as xt, l as x, b as qe, c as Se, d as Wt, n as ze, e as K, h as A, j as Dt } from "./should-force-browser-runtime-in-node-ikxWrCvn.js";
const Ot = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"]), Ut = (e) => typeof e == "string" && Ot.has(e.toLowerCase());
function N(e = {}, t, n) {
  const o = {};
  for (const r in e) {
    if (!e[r] || n && !r.startsWith(t))
      continue;
    const i = n ? r.replace(t, "") : r;
    o[i] = e[r];
  }
  return o;
}
const Ft = y({
  name: "dynamic-renderer",
  props: ["TagName", "attributes", "actionAttributes"],
  data() {
    return { isEmptyElement: Ut };
  }
}), v = (e, t) => {
  const n = e.__vccOpts || e;
  for (const [o, r] of t)
    n[o] = r;
  return n;
};
function Lt(e, t, n, o, r, i) {
  return e.isEmptyElement(e.TagName) ? (d(), S(X(e.TagName), w({ key: 1 }, e.attributes, F(e.actionAttributes)), null, 16)) : (d(), h(I, { key: 0 }, [
    typeof e.TagName == "string" ? (d(), S(X(e.TagName), w({ key: 0 }, e.attributes, F(e.actionAttributes)), {
      default: O(() => [
        V(e.$slots, "default")
      ]),
      _: 3
    }, 16)) : (d(), S(X(e.TagName), w({ key: 1 }, e.attributes, F(e.actionAttributes)), {
      default: O(() => [
        V(e.$slots, "default")
      ]),
      _: 3
    }, 16))
  ], 64));
}
const ke = /* @__PURE__ */ v(Ft, [["render", Lt]]), hs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ke
}, Symbol.toStringTag, { value: "Module" })), j = () => {
  switch ($) {
    case "react":
    case "reactNative":
    case "rsc":
      return "className";
    case "svelte":
    case "vue":
    case "solid":
    case "qwik":
    case "angular":
      return "class";
  }
}, Ht = y({
  name: "builder-button",
  components: { DynamicRenderer: ke },
  props: [
    "attributes",
    "link",
    "openLinkInNewTab",
    "builderLinkComponent",
    "text"
  ],
  data() {
    return { filterAttrs: N };
  },
  methods: {
    attrs() {
      return {
        ...N(this.attributes, "v-on:", !1),
        [j()]: `${this.link ? "" : "builder-button"} ${this.attributes[j()] || ""}`,
        ...this.link ? {
          href: this.link,
          target: this.openLinkInNewTab ? "_blank" : void 0,
          role: "link"
        } : {
          role: "button"
        }
      };
    }
  }
});
function Mt(e, t, n, o, r, i) {
  const s = k("DynamicRenderer");
  return d(), S(s, {
    attributes: e.attrs(),
    TagName: e.link ? e.builderLinkComponent || "a" : "button",
    actionAttributes: e.filterAttrs(e.attributes, "v-on:", !0)
  }, {
    default: O(() => [
      Rt(le(e.text), 1)
    ]),
    _: 1
  }, 8, ["attributes", "TagName", "actionAttributes"]);
}
const jt = /* @__PURE__ */ v(Ht, [["render", Mt]]), Kt = Symbol(), fe = {
  Builder: {
    content: null,
    context: {},
    localState: void 0,
    rootSetState() {
    },
    rootState: {},
    apiKey: null,
    apiVersion: void 0,
    componentInfos: {},
    inheritedStyles: {},
    BlocksWrapper: "div",
    BlocksWrapperProps: {},
    nonce: "",
    model: ""
  },
  key: Kt
}, qt = Symbol(), Ge = {
  Components: { registeredComponents: {} },
  key: qt
}, Je = (e, t, n) => {
  const o = String.prototype.split.call(t, /[,[\].]+?/).filter(Boolean).reduce((r, i) => r != null ? r[i] : r, e);
  return o === void 0 || o === e ? n : o;
}, zt = ({
  code: e,
  builder: t,
  context: n,
  event: o,
  localState: r,
  rootSetState: i,
  rootState: s
}) => {
  const l = At({
    builder: t,
    context: n,
    event: o,
    state: Pt({
      rootState: s,
      localState: r,
      rootSetState: i
    })
  });
  return new Function(...l.map(([a]) => a), e)(...l.map(([, a]) => a));
}, Gt = (e) => R() || Bt({
  shouldLogWarning: !0
}) ? zt(e) : Vt(e), Jt = /^(return )?(\s*)?state(?<getPath>(\.\w+)+)(\s*);?$/, Qt = /(\s)*var(\s)+_virtual_index(\s)*=(\s)*state(?<getPath>(\.\w+)+)(\s*);?(\s)*return(\s)*_virtual_index(\s)*/, Yt = (e) => {
  var t, n, o, r, i, s;
  return ((o = (n = (t = Jt.exec(e.trim())) == null ? void 0 : t.groups) == null ? void 0 : n.getPath) == null ? void 0 : o.slice(1)) || ((s = (i = (r = Qt.exec(e.trim())) == null ? void 0 : r.groups) == null ? void 0 : i.getPath) == null ? void 0 : s.slice(1));
};
function ee({
  code: e,
  context: t,
  localState: n,
  rootState: o,
  rootSetState: r,
  event: i,
  isExpression: s = !0
}) {
  if (e.trim() === "")
    return;
  const l = Yt(e.trim());
  if (l)
    return Je({
      ...o,
      ...n
    }, l);
  const a = {
    code: Nt(e, {
      isExpression: s
    }),
    builder: xt(),
    context: t,
    event: i,
    rootSetState: r,
    rootState: o,
    localState: n
  };
  try {
    return Gt(a);
  } catch (u) {
    x.error("Failed code evaluation: " + u.message, {
      code: e
    });
    return;
  }
}
function Xt(e, t) {
  var n;
  return {
    ...(n = e.component) == null ? void 0 : n.options,
    ...e.options,
    ...Zt(e, t)
  };
}
const Zt = (e, t) => {
  var n, o;
  if (((n = e.component) == null ? void 0 : n.name) === "Text" && ((o = e.component.options) != null && o.text) && typeof e.component.options.text == "string")
    return {
      ...e.component.options,
      text: e.component.options.text.replace(/{{([^}]+)}}/g, (r, i) => ee({
        code: i,
        context: t,
        localState: t.localState,
        rootState: t.rootState,
        rootSetState: t.rootSetState
      }))
    };
};
function _t(e, ...t) {
  const n = Object.assign({}, e);
  for (const o of t)
    delete n[o];
  return n;
}
function ie(e, t, n = null, o = null, r = /* @__PURE__ */ new WeakSet()) {
  if (e == null || typeof e != "object") {
    t(e, (i) => {
      n !== null && o !== null && (n[o] = i);
    });
    return;
  }
  r.has(e) || (r.add(e), Array.isArray(e) ? e.forEach((i, s) => {
    t(i, (a) => {
      e[s] = a;
    }), ie(i, t, e, s, r);
  }) : Object.entries(e).forEach(([i, s]) => {
    t(s, (a) => {
      e[i] = a;
    }), ie(s, t, e, i, r);
  }));
}
function Qe(e) {
  return e && typeof e == "object" && e["@type"] === "@builder.io/core:LocalizedValue";
}
function en(e) {
  if (!e || !Object.getOwnPropertyNames(e).length)
    return !1;
  let t = !1;
  return ie(e, (n) => {
    if (Qe(n)) {
      t = !0;
      return;
    }
  }), t;
}
function tn(e, t) {
  return !e || !Object.getOwnPropertyNames(e).length ? {} : (ie(e, (n, o) => {
    Qe(n) && o(n[t] ?? void 0);
  }), e);
}
function nn(e, t) {
  var n, o;
  return (n = e.component) != null && n.options && en((o = e.component) == null ? void 0 : o.options) && (t || console.warn("[Builder.io] In order to use localized fields in Builder, you must pass a locale prop to the BuilderComponent or to options object while fetching the content to resolve localized fields. Learn more: https://www.builder.io/c/docs/localization-inline#targeting-and-inline-localization"), e.component.options = tn(e.component.options, t ?? "Default")), e;
}
function be(e) {
  if (e === null || typeof e != "object")
    return e;
  if (Array.isArray(e))
    return e.map((n) => be(n));
  if (e["@type"] === "@builder.io/sdk:Element")
    return e;
  const t = {};
  for (const n in e)
    n !== "meta" && Object.prototype.hasOwnProperty.call(e, n) && (t[n] = be(e[n]));
  return t;
}
const on = ["svelte", "vue", "angular", "qwik", "solid"].includes($), rn = (e) => {
  if (on) {
    const t = Se(e);
    return {
      ...t,
      properties: {
        ...t.properties
      },
      actions: {
        ...t.actions
      }
    };
  } else {
    const t = be(_t(e, "children", "meta"));
    return {
      ...t,
      properties: {
        ...t.properties
      },
      actions: {
        ...t.actions
      },
      children: e.children,
      meta: e.meta
    };
  }
}, sn = ({
  block: e,
  context: t,
  localState: n,
  rootState: o,
  rootSetState: r
}) => {
  if (!e.bindings)
    return e;
  const i = rn(e);
  for (const s in e.bindings) {
    const l = e.bindings[s], a = ee({
      code: l,
      localState: n,
      rootState: o,
      rootSetState: r,
      context: t
    });
    qe(i, s, a);
  }
  return i;
};
function an({
  block: e,
  context: t,
  localState: n,
  rootState: o,
  rootSetState: r
}) {
  let i = e;
  return i = sn({
    block: i,
    localState: n,
    rootState: o,
    rootSetState: r,
    context: t
  }), i = nn(i, o.locale), i;
}
function Ce(e) {
  const t = e || (R() ? window.location.search : void 0);
  return t ? Wt(t).indexOf("builder.preview=") !== -1 : !1;
}
const ln = (e) => ({
  type: "builder.registerComponent",
  data: se(e)
}), cn = (e) => {
  const t = e.toString().trim(), n = /^[a-zA-Z0-9_]+\s*=>/i.test(t);
  return `return (${!t.startsWith("function") && !t.startsWith("async") && !t.startsWith("(") && !n ? "function " : ""}${t}).apply(this, arguments)`;
};
function se(e) {
  return JSON.parse(JSON.stringify(e, (t, n) => typeof n == "function" ? cn(n) : n));
}
const Ne = {};
function fs(e, t) {
  e === "plugin" && (t = se(t));
  let n = Ne[e];
  if (n || (n = Ne[e] = []), n.push(t), R()) {
    const o = {
      type: "builder.register",
      data: {
        type: e,
        info: t
      }
    };
    try {
      parent.postMessage(o, "*"), parent !== window && window.postMessage(o, "*");
    } catch (r) {
      console.debug("Could not postmessage", r);
    }
  }
}
function bs(e) {
  var t;
  if (R()) {
    const n = JSON.parse(JSON.stringify(e));
    e.action && (n.action = e.action.toString()), (t = window.parent) == null || t.postMessage({
      type: "builder.registerAction",
      data: n
    }, "*");
  }
}
const xe = {};
function gs(e) {
  if (R()) {
    Object.assign(xe, e);
    const t = {
      type: "builder.settingsChange",
      data: xe
    };
    parent.postMessage(t, "*");
  }
}
const We = "builder.", dn = "options.", Ye = (e) => {
  if (!e)
    return {};
  const t = ze(e), n = {};
  return Object.keys(t).forEach((o) => {
    if (o.startsWith(We)) {
      const r = o.replace(We, "").replace(dn, "");
      n[r] = t[o];
    }
  }), n;
}, un = () => {
  if (!R())
    return {};
  const e = new URLSearchParams(window.location.search);
  return Ye(e);
}, Xe = "4.2.3", Ze = () => ({
  "X-Builder-SDK": $,
  "X-Builder-SDK-GEN": "2",
  "X-Builder-SDK-Version": Xe
}), pn = (e) => {
  if (e === "localhost" || e === "127.0.0.1")
    return e;
  const t = e.split(".");
  return t.length > 2 ? t.slice(1).join(".") : e;
}, ce = ({
  name: e,
  canTrack: t
}) => {
  var n;
  try {
    return t ? (n = document.cookie.split("; ").find((o) => o.startsWith(`${e}=`))) == null ? void 0 : n.split("=")[1] : void 0;
  } catch (o) {
    x.warn("[COOKIE] GET error: ", (o == null ? void 0 : o.message) || o);
    return;
  }
}, _e = async (e) => ce(e), mn = (e) => e.map(([t, n]) => n ? `${t}=${n}` : t).filter(K).join("; "), hn = [["secure", ""], ["SameSite", "None"]], fn = ({
  name: e,
  value: t,
  expires: n
}) => {
  const r = (R() ? location.protocol === "https:" : !0) ? hn : [[]], i = n ? [["expires", n.toUTCString()]] : [[]], s = [[e, t], ...i, ["path", "/"], ["domain", pn(window.location.hostname)], ...r];
  return mn(s);
}, Te = async ({
  name: e,
  value: t,
  expires: n,
  canTrack: o
}) => {
  try {
    if (!o)
      return;
    const r = fn({
      name: e,
      value: t,
      expires: n
    });
    document.cookie = r;
  } catch (r) {
    x.warn("[COOKIE] SET error: ", (r == null ? void 0 : r.message) || r);
  }
};
function bn() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
    const t = Math.random() * 16 | 0;
    return (e == "x" ? t : t & 3 | 8).toString(16);
  });
}
function et() {
  return bn().replace(/-/g, "");
}
const tt = "builderSessionId", gn = async ({
  canTrack: e
}) => {
  if (!e)
    return;
  const t = await _e({
    name: tt,
    canTrack: e
  });
  if (K(t))
    return t;
  {
    const n = yn();
    return vn({
      id: n,
      canTrack: e
    }), n;
  }
}, yn = () => et(), vn = ({
  id: e,
  canTrack: t
}) => Te({
  name: tt,
  value: e,
  canTrack: t
}), nt = () => R() && typeof localStorage < "u" ? localStorage : void 0, Sn = ({
  key: e,
  canTrack: t
}) => {
  var n;
  try {
    return t ? (n = nt()) == null ? void 0 : n.getItem(e) : void 0;
  } catch (o) {
    console.debug("[LocalStorage] GET error: ", o);
    return;
  }
}, kn = ({
  key: e,
  canTrack: t,
  value: n
}) => {
  var o;
  try {
    t && ((o = nt()) == null || o.setItem(e, n));
  } catch (r) {
    console.debug("[LocalStorage] SET error: ", r);
  }
}, ot = "builderVisitorId", Cn = ({
  canTrack: e
}) => {
  if (!e)
    return;
  const t = Sn({
    key: ot,
    canTrack: e
  });
  if (K(t))
    return t;
  {
    const n = Tn();
    return In({
      id: n,
      canTrack: e
    }), n;
  }
}, Tn = () => et(), In = ({
  id: e,
  canTrack: t
}) => kn({
  key: ot,
  value: e,
  canTrack: t
});
function Ie(e) {
  var t;
  typeof process < "u" && ((t = process.env) != null && t.DEBUG) && String(process.env.DEBUG) == "true" && x.log(e);
}
const wn = async ({
  canTrack: e
}) => {
  if (!e)
    return {
      visitorId: void 0,
      sessionId: void 0
    };
  const t = await gn({
    canTrack: e
  }), n = Cn({
    canTrack: e
  });
  return {
    sessionId: t,
    visitorId: n
  };
}, $n = async ({
  type: e,
  canTrack: t,
  apiKey: n,
  metadata: o,
  ...r
}) => ({
  type: e,
  data: {
    ...r,
    metadata: {
      url: location.href,
      ...o
    },
    ...await wn({
      canTrack: t
    }),
    userAttributes: Dt(),
    ownerId: n
  }
});
async function ge({
  apiHost: e,
  ...t
}) {
  if (!t.apiKey) {
    x.error("Missing API key for track call. Please provide your API key.");
    return;
  }
  if (!t.canTrack || A() || !(R() || $ === "reactNative"))
    return;
  const o = `${e || "https://cdn.builder.io"}/api/v1/track`;
  return Ie(o), fetch(o, {
    method: "POST",
    body: JSON.stringify({
      events: [await $n(t)]
    }),
    headers: {
      "content-type": "application/json",
      ...Ze()
    },
    mode: "cors"
  }).catch((r) => {
    console.error("Failed to track: ", r);
  });
}
const ys = (e) => ge({
  ...e,
  canTrack: !0
}), Rn = ["*.beta.builder.io", "beta.builder.io", "builder.io", "localhost", "qa.builder.io"];
function rt(e, t) {
  if (!t.origin.startsWith("http") && !t.origin.startsWith("https"))
    return !1;
  const n = new URL(t.origin), o = n.hostname;
  return (e || Rn).findIndex((r) => r.startsWith("*.") ? o.endsWith(r.slice(1)) : r === o) > -1;
}
let De = !1;
const it = (e) => {
  var t, n;
  De || (De = !0, R() && ((t = window.parent) == null || t.postMessage({
    type: "builder.sdkInfo",
    data: {
      target: $,
      version: Xe,
      supportsPatchUpdates: !1,
      // Supports builder-model="..." attribute which is needed to
      // scope our '+ add block' button styling
      supportsAddBlockScoping: !0,
      supportsCustomBreakpoints: !0,
      modelName: e.modelName,
      apiKey: e.apiKey,
      supportsXSmallBreakpoint: !0,
      blockLevelPersonalization: !0
    }
  }, "*"), (n = window.parent) == null || n.postMessage({
    type: "builder.updateContent",
    data: {
      options: e
    }
  }, "*"), window.addEventListener("message", (o) => {
    var i, s;
    if (!rt(e.trustedHosts, o))
      return;
    const {
      data: r
    } = o;
    if (r != null && r.type)
      switch (r.type) {
        case "builder.evaluate": {
          const l = r.data.text, a = r.data.arguments || [], u = r.data.id, p = new Function(l);
          let f, c = null;
          try {
            f = p.apply(null, a);
          } catch (m) {
            c = m;
          }
          c ? (i = window.parent) == null || i.postMessage({
            type: "builder.evaluateError",
            data: {
              id: u,
              error: c.message
            }
          }, "*") : f && typeof f.then == "function" ? f.then((m) => {
            var b;
            (b = window.parent) == null || b.postMessage({
              type: "builder.evaluateResult",
              data: {
                id: u,
                result: m
              }
            }, "*");
          }).catch(console.error) : (s = window.parent) == null || s.postMessage({
            type: "builder.evaluateResult",
            data: {
              result: f,
              id: u
            }
          }, "*");
          break;
        }
      }
  })));
}, st = ({
  model: e,
  trustedHosts: t,
  callbacks: n
}) => (o) => {
  if (!rt(t, o))
    return;
  const {
    data: r
  } = o;
  if (r)
    switch (r.type) {
      case "builder.configureSdk": {
        n.configureSdk(r.data);
        break;
      }
      case "builder.triggerAnimation": {
        n.animation(r.data);
        break;
      }
      case "builder.resetState": {
        const i = r.data, s = i.model, l = i == null ? void 0 : i.state, a = i.editType;
        s === e && l && n.stateUpdate(l, a);
        break;
      }
      case "builder.contentUpdate": {
        const i = r.data, s = i.key || i.alias || i.entry || i.modelName, l = i.data, a = i.editType;
        s === e && n.contentUpdate(l, a);
        break;
      }
    }
}, vs = ({
  model: e,
  apiKey: t,
  callback: n,
  trustedHosts: o
}) => {
  if (!R)
    return x.warn("`subscribeToEditor` only works in the browser. It currently seems to be running on the server."), () => {
    };
  it({
    modelName: e,
    apiKey: t
  });
  const r = st({
    callbacks: {
      contentUpdate: n,
      animation: () => {
      },
      configureSdk: () => {
      },
      stateUpdate: () => {
      }
    },
    model: e,
    trustedHosts: o
  });
  return window.addEventListener("message", r), () => {
    window.removeEventListener("message", r);
  };
}, En = "builder.tests", we = (e) => `${En}.${e}`, An = ({
  contentId: e
}) => _e({
  name: we(e),
  canTrack: !0
}), Pn = ({
  contentId: e
}) => ce({
  name: we(e),
  canTrack: !0
}), Bn = ({
  contentId: e,
  value: t
}) => Te({
  name: we(e),
  value: t,
  canTrack: !0
}), at = (e) => K(e.id) && K(e.variations) && Object.keys(e.variations).length > 0, Vn = ({
  id: e,
  variations: t
}) => {
  var r;
  let n = 0;
  const o = Math.random();
  for (const i in t) {
    const s = (r = t[i]) == null ? void 0 : r.testRatio;
    if (n += s, o < n)
      return i;
  }
  return e;
}, lt = (e) => {
  const t = Vn(e);
  return Bn({
    contentId: e.id,
    value: t
  }).catch((n) => {
    x.error("could not store A/B test variation: ", n);
  }), t;
}, ct = ({
  item: e,
  testGroupId: t
}) => {
  const n = e.variations[t];
  return t === e.id || // handle edge-case where `testGroupId` points to non-existing variation
  !n ? {
    testVariationId: e.id,
    testVariationName: "Default"
  } : {
    data: n.data,
    testVariationId: n.id,
    testVariationName: n.name || (n.id === e.id ? "Default" : "")
  };
}, Nn = ({
  item: e,
  canTrack: t
}) => {
  if (!t)
    return e;
  if (!e)
    return;
  if (!at(e))
    return e;
  const n = Pn({
    contentId: e.id
  }) || lt({
    variations: e.variations,
    id: e.id
  }), o = ct({
    item: e,
    testGroupId: n
  });
  return {
    ...e,
    ...o
  };
}, xn = async ({
  item: e,
  canTrack: t
}) => {
  if (!t || !at(e))
    return e;
  const o = await An({
    contentId: e.id
  }) || lt({
    variations: e.variations,
    id: e.id
  }), r = ct({
    item: e,
    testGroupId: o
  });
  return {
    ...e,
    ...r
  };
};
const Oe = "builder.userAttributes";
function Ue() {
  let e = !0;
  const t = /* @__PURE__ */ new Set();
  return {
    setUserAttributes(n) {
      if (!R())
        return;
      const o = {
        ...this.getUserAttributes(),
        ...n
      };
      Te({
        name: Oe,
        value: JSON.stringify(o),
        canTrack: e
      }), t.forEach((r) => r(o));
    },
    getUserAttributes() {
      return R() ? JSON.parse(ce({
        name: Oe,
        canTrack: e
      }) || "{}") : {};
    },
    subscribeOnUserAttributesChange(n, {
      fireImmediately: o
    } = {}) {
      return t.add(n), o && n(this.getUserAttributes()), function() {
        t.delete(n);
      };
    },
    setCanTrack(n) {
      e = n;
    }
  };
}
let ye;
R() && $ === "qwik" ? (window.__BUILDER_USER_ATTRIBUTES_SERVICE__ || (window.__BUILDER_USER_ATTRIBUTES_SERVICE__ = Ue()), ye = window.__BUILDER_USER_ATTRIBUTES_SERVICE__) : ye = Ue();
const ae = ye, Ss = (e) => {
  ae.setUserAttributes(e);
}, G = (e) => {
  const t = K(e) ? e : !0;
  return ae.setCanTrack(t), t;
};
function Wn() {
  return typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : globalThis;
}
function Dn() {
  const e = Wn().fetch;
  if (typeof e > "u")
    throw console.warn(`Builder SDK could not find a global fetch function. Make sure you have a polyfill for fetch in your project. 
      For more information, read https://github.com/BuilderIO/this-package-uses-fetch`), new Error("Builder SDK could not find a global `fetch` function");
  return e;
}
const On = Dn();
function ve(e, t = null, n = ".") {
  return Object.keys(e).reduce((o, r) => {
    const i = e[r], s = [t, r].filter(Boolean).join(n);
    return [typeof i == "object", i !== null, !(Array.isArray(i) && i.length === 0)].every(Boolean) ? {
      ...o,
      ...ve(i, s, n)
    } : {
      ...o,
      [s]: i
    };
  }, {});
}
function dt(e, t, n = {}) {
  for (const o in e) {
    const r = e[o], i = t ? t + "." + o : o;
    r && typeof r == "object" && !Array.isArray(r) && !Object.keys(r).find((s) => s.startsWith("$")) ? dt(r, i, n) : n[i] = r;
  }
  return n;
}
function Un(e) {
  const t = {};
  for (const n in e) {
    const o = n.split(".");
    let r = t;
    for (let i = 0; i < o.length; i++) {
      const s = o[i];
      i === o.length - 1 ? r[s] = e[n] : (r[s] = r[s] || {}, r = r[s]);
    }
  }
  return t;
}
const Fn = "v3", Fe = (e) => typeof e == "number" && !isNaN(e) && e >= 0, $e = (e) => {
  const {
    limit: t = 30,
    userAttributes: n,
    query: o,
    model: r,
    apiKey: i,
    enrich: s,
    locale: l,
    apiVersion: a = Fn,
    fields: u,
    omit: p,
    offset: f,
    cacheSeconds: c,
    staleCacheSeconds: m,
    sort: b,
    includeUnpublished: g,
    apiHost: P
  } = e;
  if (!i)
    throw new Error("Missing API key");
  if (!["v3"].includes(a))
    throw new Error(`Invalid apiVersion: expected 'v3', received '${a}'`);
  const U = t !== 1, B = P || "https://cdn.builder.io", T = new URL(`${B}/api/${a}/content/${r}`);
  T.searchParams.set("apiKey", i), T.searchParams.set("limit", String(t)), T.searchParams.set("noTraverse", String(U)), T.searchParams.set("includeRefs", String(!0)), l && T.searchParams.set("locale", l);
  let W = n || {};
  if (s && T.searchParams.set("enrich", String(s)), T.searchParams.set("omit", p ?? "meta.componentsUsed"), u && T.searchParams.set("fields", u), Number.isFinite(f) && f > -1 && T.searchParams.set("offset", String(Math.floor(f))), typeof g == "boolean" && T.searchParams.set("includeUnpublished", String(g)), c && Fe(c) && T.searchParams.set("cacheSeconds", String(c)), m && Fe(m) && T.searchParams.set("staleCacheSeconds", String(m)), b) {
    const D = ve({
      sort: b
    });
    for (const H in D)
      T.searchParams.set(H, JSON.stringify(D[H]));
  }
  const J = {
    ...un(),
    ...ze(e.options || {})
  };
  W = {
    ...W,
    ...Hn(J)
  };
  const Q = ve(J);
  for (const D in Q)
    T.searchParams.set(D, String(Q[D]));
  if (Object.keys(W).length > 0 && T.searchParams.set("userAttributes", JSON.stringify(W)), o) {
    const D = dt({
      query: o
    });
    for (const H in D)
      T.searchParams.set(H, JSON.stringify(D[H]));
  }
  return T;
}, Ln = (e) => {
  const t = {};
  for (const n in e)
    n.startsWith("userAttributes.") && (t[n] = e[n], delete e[n]);
  return t;
}, Hn = (e) => {
  if (R() && e.preview === "BUILDER_STUDIO") {
    e["userAttributes.urlPath"] = window.location.pathname, e["userAttributes.host"] = window.location.host;
    const t = Ln(e), {
      userAttributes: n
    } = Un(t);
    return n;
  }
  return {};
}, Mn = (e) => "results" in e;
async function Re(e) {
  var o;
  const t = e.locale || ((o = e.userAttributes) == null ? void 0 : o.locale);
  t && (e.locale = t, e.userAttributes = {
    locale: t,
    ...e.userAttributes
  });
  const n = await qn({
    ...e,
    limit: 1
  });
  return n && n[0] || null;
}
const jn = async (e) => {
  var s;
  const t = $e(e), n = e.fetch ?? On, o = {
    ...e.fetchOptions,
    headers: {
      ...(s = e.fetchOptions) == null ? void 0 : s.headers,
      ...Ze()
    }
  };
  return await (await n(t.href, o)).json();
}, Kn = async (e, t, n = $e(e)) => {
  const o = G(e.canTrack);
  if (n.search.includes("preview="), !o || !(R() || $ === "reactNative"))
    return t.results;
  try {
    const r = [];
    for (const i of t.results)
      r.push(await xn({
        item: i,
        canTrack: o
      }));
    t.results = r;
  } catch (r) {
    x.error("Could not process A/B tests. ", r);
  }
  return t.results;
};
async function qn(e) {
  const t = $e(e), n = await jn(e);
  if (!Mn(n))
    throw x.error("Error fetching data. ", {
      url: t,
      content: n,
      options: e
    }), n;
  return Kn(e, n);
}
const ks = async (e) => {
  var o, r, i;
  const t = e.path || ((o = e.url) == null ? void 0 : o.pathname) || ((r = e.userAttributes) == null ? void 0 : r.urlPath), n = {
    ...e,
    apiKey: e.apiKey,
    model: e.model || "page",
    userAttributes: {
      ...e.userAttributes,
      ...t ? {
        urlPath: t
      } : {}
    },
    options: Ye(e.searchParams || ((i = e.url) == null ? void 0 : i.searchParams) || e.options)
  };
  return {
    apiKey: n.apiKey,
    model: n.model,
    content: await Re(n)
  };
}, Ee = (e) => e ? e.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase() : "";
function zn(e, t, n = {}) {
  let o, r, i, s = null, l = 0;
  const a = function() {
    l = n.leading === !1 ? 0 : Date.now(), s = null, i = e.apply(o, r), s || (o = r = null);
  };
  return function() {
    const u = Date.now();
    !l && n.leading === !1 && (l = u);
    const p = t - (u - l);
    return o = this, r = arguments, p <= 0 || p > t ? (s && (clearTimeout(s), s = null), l = u, i = e.apply(o, r), s || (o = r = null)) : !s && n.trailing !== !1 && (s = setTimeout(a, p)), i;
  };
}
function Z(e, ...t) {
  const n = Object(e);
  for (let o = 1; o < arguments.length; o++) {
    const r = arguments[o];
    if (r != null)
      for (const i in r)
        Object.prototype.hasOwnProperty.call(r, i) && (n[i] = r[i]);
  }
  return n;
}
function Gn(e) {
  for (const t of e)
    switch (t.trigger) {
      case "pageLoad":
        mt(t);
        break;
      case "scrollInView":
        Qn(t);
        break;
    }
}
function ut(e) {
  console.warn(`Cannot animate element: element with ID ${e} not found!`);
}
function pt(e, t) {
  const n = Jn(e), o = getComputedStyle(t), r = e.steps[0].styles, i = e.steps[e.steps.length - 1].styles, s = [r, i];
  for (const l of s)
    for (const a of n)
      a in l || (l[a] = o[a]);
}
function Jn(e) {
  const t = [];
  for (const n of e.steps)
    for (const o in n.styles)
      t.indexOf(o) === -1 && t.push(o);
  return t;
}
function mt(e) {
  const t = Array.prototype.slice.call(document.getElementsByClassName(e.elementId || e.id || ""));
  if (!t.length) {
    ut(e.elementId || e.id || "");
    return;
  }
  Array.from(t).forEach((n) => {
    pt(e, n), n.style.transition = "none", n.style.transitionDelay = "0", Z(n.style, e.steps[0].styles), setTimeout(() => {
      n.style.transition = `all ${e.duration}s ${Ee(e.easing)}`, e.delay && (n.style.transitionDelay = e.delay + "s"), Z(n.style, e.steps[1].styles), setTimeout(() => {
        n.style.transition = "", n.style.transitionDelay = "";
      }, (e.delay || 0) * 1e3 + e.duration * 1e3 + 100);
    });
  });
}
function Qn(e) {
  const t = Array.prototype.slice.call(document.getElementsByClassName(e.elementId || e.id || ""));
  if (!t.length) {
    ut(e.elementId || e.id || "");
    return;
  }
  Array.from(t).forEach((n) => {
    pt(e, n);
    let o = !1, r = !1;
    function i() {
      !o && l(n) ? (o = !0, r = !0, setTimeout(() => {
        Z(n.style, e.steps[1].styles), e.repeat || document.removeEventListener("scroll", s), setTimeout(() => {
          r = !1, e.repeat || (n.style.transition = "", n.style.transitionDelay = "");
        }, (e.duration + (e.delay || 0)) * 1e3 + 100);
      })) : e.repeat && o && !r && !l(n) && (o = !1, Z(n.style, e.steps[0].styles));
    }
    const s = zn(i, 200, {
      leading: !1
    });
    function l(p) {
      const f = p.getBoundingClientRect(), c = window.innerHeight, b = (e.thresholdPercent || 0) / 100 * c;
      return f.bottom > b && f.top < c - b;
    }
    const a = e.steps[0].styles;
    function u() {
      Z(n.style, a);
    }
    u(), setTimeout(() => {
      n.style.transition = `all ${e.duration}s ${Ee(e.easing)}`, e.delay && (n.style.transitionDelay = e.delay + "s");
    }), document.addEventListener("scroll", s, {
      capture: !0,
      passive: !0
    }), i();
  });
}
const ht = (e) => Object.entries(e).map(([n, o]) => {
  if (typeof o == "string")
    return `${Ee(n)}: ${o};`;
}).filter(K), Yn = (e) => ht(e).join(`
`), Cs = ({
  mediaQuery: e,
  className: t,
  styles: n
}) => {
  const o = `.${t} {
    ${Yn(n)}
  }`;
  return e ? `${e} {
      ${o}
    }` : o;
};
function Xn({
  style: e
}) {
  return e;
}
const Ts = ({
  block: e,
  context: t
}) => ft(Xn({
  style: e.style || {},
  context: t,
  block: e
}));
function ft(e) {
  switch ($) {
    case "svelte":
    case "vue":
    case "solid":
    case "angular":
      return ht(e).join(" ");
    case "qwik":
    case "reactNative":
    case "react":
    case "rsc":
      return e;
  }
}
const bt = (e, t) => e ? t ? e.models && e.models.length > 0 && !e.models.includes(t) : !1 : !0, Zn = ({
  block: e,
  registeredComponents: t,
  model: n
}) => {
  var i;
  const o = (i = e.component) == null ? void 0 : i.name;
  if (!o)
    return null;
  const r = t[o];
  if (!r || bt(r, n)) {
    console.warn(`
      Could not find a registered component named "${o}". 
      If you registered it, is the file that registered it imported by the file that needs to render it?`);
    return;
  } else
    return r;
}, _n = ({
  block: e,
  context: t
}) => {
  const {
    repeat: n,
    ...o
  } = e;
  if (!(n != null && n.collection))
    return;
  const r = ee({
    code: n.collection,
    localState: t.localState,
    rootState: t.rootState,
    rootSetState: t.rootSetState,
    context: t.context
  });
  if (!Array.isArray(r))
    return;
  const i = n.collection.split(".").pop(), s = n.itemName || (i ? i + "Item" : "item");
  return r.map((a, u) => ({
    context: {
      ...t,
      localState: {
        ...t.localState,
        $index: u,
        $item: a,
        [s]: a,
        [`$${s}Index`]: u
      }
    },
    block: o
  }));
}, eo = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderLinkComponent ? {
    builderLinkComponent: t
  } : {};
}, to = (e, t, n) => {
  var o;
  return (o = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && o.builderComponents ? {
    builderComponents: Object.fromEntries(Object.entries(t).filter(([i, s]) => !bt(s, n)))
  } : {};
}, no = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderBlock ? {
    builderBlock: t
  } : {};
}, oo = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderContext ? {
    builderContext: t
  } : {};
}, ro = (e) => e.toString(), io = () => Promise.resolve().then(() => So).then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component DynamicDiv at ../dynamic-div.vue",
    e
  ), e;
}), so = () => import("./block-wrapper-HC1GKPg-.js").then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component BlockWrapper at ./components/block-wrapper.vue",
    e
  ), e;
}), ao = () => import("./component-ref-bqN5ZiyT.js").then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component ComponentRef at ./components/component-ref/component-ref.vue",
    e
  ), e;
}), lo = () => import("./repeated-block-FOLLYnPQ.js").then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component RepeatedBlock at ./components/repeated-block.vue",
    e
  ), e;
}), co = () => import("./style-wrapper-bEfbvdLX.js").then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component StyleWrapper at ./components/style-wrapper.vue",
    e
  ), e;
}), uo = y({
  name: "block",
  components: {
    StyleWrapper: Y(co),
    RepeatedBlock: Y(lo),
    ComponentRef: Y(ao),
    BlockWrapper: Y(so),
    DynamicDiv: Y(io)
  },
  props: ["block", "context", "registeredComponents", "linkComponent"],
  data() {
    return {
      _processedBlock: {
        value: null,
        update: !1
      },
      generateKey: ro
    };
  },
  mounted() {
    const e = this.processedBlock.id, t = this.processedBlock.animations;
    t && e && Gn(
      t.map((n) => ({
        ...n,
        elementId: e
      }))
    );
  },
  updated() {
  },
  computed: {
    repeatItem() {
      return _n({
        block: this.block,
        context: this.context
      });
    },
    processedBlock() {
      var t;
      return (t = this.block.repeat) != null && t.collection ? this.block : an({
        block: this.block,
        localState: this.context.localState,
        rootState: this.context.rootState,
        rootSetState: this.context.rootSetState,
        context: this.context.context
      });
    },
    blockComponent() {
      return Zn({
        block: this.processedBlock,
        registeredComponents: this.registeredComponents,
        model: this.context.model
      });
    },
    Tag() {
      var t;
      return this.block.tagName === "a" || ((t = this.processedBlock.properties) == null ? void 0 : t.href) || this.processedBlock.href ? this.linkComponent || "a" : this.block.tagName || "div";
    },
    canShowBlock() {
      var n, o;
      if ((n = this.block.repeat) != null && n.collection)
        return !!((o = this.repeatItem) != null && o.length);
      const e = "hide" in this.processedBlock ? this.processedBlock.hide : !1;
      return ("show" in this.processedBlock ? this.processedBlock.show : !0) && !e;
    },
    childrenWithoutParentComponent() {
      var t;
      return !((t = this.blockComponent) != null && t.component) && !this.repeatItem ? this.processedBlock.children ?? [] : [];
    },
    componentRefProps() {
      var e, t, n;
      return {
        blockChildren: this.processedBlock.children ?? [],
        componentRef: (e = this.blockComponent) == null ? void 0 : e.component,
        componentOptions: {
          ...Xt(this.processedBlock, this.context),
          ...no(this.blockComponent, this.processedBlock),
          ...oo(this.blockComponent, this.context),
          ...eo(this.blockComponent, this.linkComponent),
          ...to(
            this.blockComponent,
            this.registeredComponents,
            this.context.model
          )
        },
        context: this.context,
        linkComponent: this.linkComponent,
        registeredComponents: this.registeredComponents,
        builderBlock: this.processedBlock,
        includeBlockProps: ((t = this.blockComponent) == null ? void 0 : t.noWrap) === !0,
        isInteractive: !((n = this.blockComponent) != null && n.isRSC && $ === "rsc")
      };
    }
  }
});
function po(e, t, n, o, r, i) {
  var f;
  const s = k("StyleWrapper"), l = k("ComponentRef"), a = k("Block", !0), u = k("BlockWrapper"), p = k("RepeatedBlock");
  return e.canShowBlock ? (d(), h(I, { key: 0 }, [
    E(s, {
      block: e.processedBlock,
      context: e.context,
      id: e.block.id
    }, null, 8, ["block", "context", "id"]),
    (f = e.blockComponent) != null && f.noWrap ? (d(), h(I, { key: 1 }, [
      e.repeatItem ? (d(!0), h(I, { key: 1 }, L(e.repeatItem, (c, m) => (d(), S(p, {
        key: e.generateKey(m),
        repeatContext: c.context,
        block: c.block,
        registeredComponents: e.registeredComponents,
        linkComponent: e.linkComponent
      }, null, 8, ["repeatContext", "block", "registeredComponents", "linkComponent"]))), 128)) : (d(), S(l, {
        key: 0,
        componentRef: e.componentRefProps.componentRef,
        componentOptions: e.componentRefProps.componentOptions,
        blockChildren: e.componentRefProps.blockChildren,
        context: e.componentRefProps.context,
        registeredComponents: e.componentRefProps.registeredComponents,
        linkComponent: e.componentRefProps.linkComponent,
        builderBlock: e.componentRefProps.builderBlock,
        includeBlockProps: e.componentRefProps.includeBlockProps,
        isInteractive: e.componentRefProps.isInteractive
      }, null, 8, ["componentRef", "componentOptions", "blockChildren", "context", "registeredComponents", "linkComponent", "builderBlock", "includeBlockProps", "isInteractive"]))
    ], 64)) : (d(), h(I, { key: 0 }, [
      e.repeatItem ? (d(!0), h(I, { key: 1 }, L(e.repeatItem, (c, m) => (d(), S(p, {
        key: e.generateKey(m),
        repeatContext: c.context,
        block: c.block,
        registeredComponents: e.registeredComponents,
        linkComponent: e.linkComponent
      }, null, 8, ["repeatContext", "block", "registeredComponents", "linkComponent"]))), 128)) : (d(), S(u, {
        key: 0,
        Wrapper: e.Tag,
        block: e.processedBlock,
        context: e.context
      }, {
        default: O(() => [
          E(l, {
            componentRef: e.componentRefProps.componentRef,
            componentOptions: e.componentRefProps.componentOptions,
            blockChildren: e.componentRefProps.blockChildren,
            context: e.componentRefProps.context,
            registeredComponents: e.componentRefProps.registeredComponents,
            linkComponent: e.componentRefProps.linkComponent,
            builderBlock: e.componentRefProps.builderBlock,
            includeBlockProps: e.componentRefProps.includeBlockProps,
            isInteractive: e.componentRefProps.isInteractive
          }, null, 8, ["componentRef", "componentOptions", "blockChildren", "context", "registeredComponents", "linkComponent", "builderBlock", "includeBlockProps", "isInteractive"]),
          (d(!0), h(I, null, L(e.childrenWithoutParentComponent, (c, m) => (d(), S(a, {
            key: c.id,
            block: c,
            registeredComponents: e.registeredComponents,
            linkComponent: e.linkComponent,
            context: e.context
          }, null, 8, ["block", "registeredComponents", "linkComponent", "context"]))), 128))
        ]),
        _: 1
      }, 8, ["Wrapper", "block", "context"]))
    ], 64))
  ], 64)) : C("", !0);
}
const gt = /* @__PURE__ */ v(uo, [["render", po]]), Is = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: gt
}, Symbol.toStringTag, { value: "Module" })), mo = y({
  name: "builder-blocks-wrapper",
  props: [
    "blocks",
    "classNameProp",
    "path",
    "parent",
    "styleProp",
    "BlocksWrapperProps",
    "BlocksWrapper"
  ],
  data() {
    return { shouldUpdate: !1 };
  },
  mounted() {
  },
  watch: {
    onUpdateHook0: { handler() {
    }, immediate: !0 }
  },
  computed: {
    className() {
      var e;
      return [
        "builder-blocks",
        (e = this.blocks) != null && e.length ? "" : "no-blocks",
        this.classNameProp
      ].filter(Boolean).join(" ");
    },
    dataPath() {
      if (!this.path)
        return;
      const e = "this.", t = "component.options.";
      return this.path.startsWith(e) ? this.path.replace(e, "") : this.path.startsWith(t) ? this.path : `${t}${this.path || ""}`;
    },
    onUpdateHook0() {
      return {
        0: this.blocks
      };
    }
  },
  methods: {
    onClick() {
      var e, t;
      A() && !((e = this.blocks) != null && e.length) && ((t = window.parent) == null || t.postMessage(
        {
          type: "builder.clickEmptyBlocks",
          data: {
            parentElementId: this.parent,
            dataPath: this.dataPath
          }
        },
        "*"
      ));
    },
    onMouseEnter() {
      var e, t;
      A() && !((e = this.blocks) != null && e.length) && ((t = window.parent) == null || t.postMessage(
        {
          type: "builder.hoverEmptyBlocks",
          data: {
            parentElementId: this.parent,
            dataPath: this.dataPath
          }
        },
        "*"
      ));
    }
  }
});
function ho(e, t, n, o, r, i) {
  return d(), S(X(e.BlocksWrapper), w({
    ref: "blocksWrapperRef",
    class: e.className + " component-5vz8uirn7sc",
    "builder-path": e.dataPath,
    "builder-parent-id": e.parent,
    style: e.styleProp,
    onClick: (s) => e.onClick(),
    onMouseEnter: (s) => e.onMouseEnter(),
    onKeyPress: (s) => e.onClick()
  }, { ...e.BlocksWrapperProps }), {
    default: O(() => [
      V(e.$slots, "default", {}, void 0, !0)
    ]),
    _: 3
  }, 16, ["class", "builder-path", "builder-parent-id", "style", "onClick", "onMouseEnter", "onKeyPress"]);
}
const fo = /* @__PURE__ */ v(mo, [["render", ho], ["__scopeId", "data-v-82fc93d6"]]), bo = y({
  name: "builder-blocks",
  components: { BlocksWrapper: fo, Block: gt },
  props: [
    "blocks",
    "parent",
    "path",
    "styleProp",
    "BlocksWrapperProps",
    "context",
    "className",
    "linkComponent",
    "registeredComponents"
  ],
  inject: {
    builderContext: fe.key,
    componentsContext: Ge.key
  }
});
function go(e, t, n, o, r, i) {
  var a, u, p, f;
  const s = k("Block"), l = k("BlocksWrapper");
  return d(), S(l, {
    blocks: e.blocks,
    parent: e.parent,
    path: e.path,
    styleProp: e.styleProp,
    BlocksWrapperProps: e.BlocksWrapperProps || ((a = e.context) == null ? void 0 : a.BlocksWrapperProps) || ((u = e.builderContext) == null ? void 0 : u.BlocksWrapperProps),
    classNameProp: e.className,
    BlocksWrapper: ((p = e.context) == null ? void 0 : p.BlocksWrapper) || ((f = e.builderContext) == null ? void 0 : f.BlocksWrapper)
  }, {
    default: O(() => [
      V(e.$slots, "default"),
      e.blocks ? (d(!0), h(I, { key: 0 }, L(e.blocks, (c, m) => {
        var b;
        return d(), S(s, {
          key: c.id,
          block: c,
          linkComponent: e.linkComponent,
          context: e.context || e.builderContext,
          registeredComponents: e.registeredComponents || ((b = e.componentsContext) == null ? void 0 : b.registeredComponents)
        }, null, 8, ["block", "linkComponent", "context", "registeredComponents"]);
      }), 128)) : C("", !0)
    ]),
    _: 3
  }, 8, ["blocks", "parent", "path", "styleProp", "BlocksWrapperProps", "classNameProp", "BlocksWrapper"]);
}
const q = /* @__PURE__ */ v(bo, [["render", go]]), yo = y({
  name: "dynamic-div",
  props: []
});
function vo(e, t, n, o, r, i) {
  return d(), h("div", null, [
    V(e.$slots, "default")
  ]);
}
const te = /* @__PURE__ */ v(yo, [["render", vo]]), So = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: te
}, Symbol.toStringTag, { value: "Module" })), de = y({
  render() {
    return Ke("style", {
      innerHTML: this.styles,
      "data-id": this.id,
      nonce: this.nonce
    });
  },
  name: "inlined-styles",
  props: ["styles", "id", "nonce"]
}), yt = {
  xsmall: {
    min: 0,
    default: 160,
    max: 320
  },
  small: {
    min: 321,
    default: 321,
    max: 640
  },
  medium: {
    min: 641,
    default: 642,
    max: 991
  },
  large: {
    min: 990,
    default: 991,
    max: 1200
  }
}, ws = (e, t = yt) => `@media (max-width: ${t[e].max}px)`, ko = (e) => {
  const t = Se(yt);
  if (!e)
    return t;
  const {
    xsmall: n,
    small: o,
    medium: r
  } = e;
  if (n) {
    const a = Math.floor(n / 2);
    t.xsmall = {
      max: n,
      min: a,
      default: a + 1
    };
  }
  if (!o || !r)
    return t;
  const i = n ? t.xsmall.max + 1 : Math.floor(o / 2);
  t.small = {
    max: o,
    min: i,
    default: i + 1
  };
  const s = t.small.max + 1;
  t.medium = {
    max: r,
    min: s,
    default: s + 1
  };
  const l = t.medium.max + 1;
  return t.large = {
    max: 2e3,
    // TODO: decide upper limit
    min: l,
    default: l + 1
  }, t;
}, Co = (e) => `builder-columns ${e}-breakpoints`, To = y({
  name: "builder-columns",
  components: {
    InlinedStyles: de,
    DynamicRenderer: ke,
    Blocks: q,
    DynamicDiv: te
  },
  props: [
    "space",
    "columns",
    "stackColumnsAt",
    "builderLinkComponent",
    "reverseColumnsWhenStacked",
    "builderContext",
    "builderBlock",
    "builderComponents"
  ],
  data() {
    return { TARGET: $, getColumnsClass: Co };
  },
  computed: {
    gutterSize() {
      return typeof this.space == "number" ? this.space || 0 : 20;
    },
    cols() {
      return this.columns || [];
    },
    stackAt() {
      return this.stackColumnsAt || "tablet";
    },
    flexDir() {
      return this.stackColumnsAt === "never" ? "row" : this.reverseColumnsWhenStacked ? "column-reverse" : "column";
    }
  },
  methods: {
    getTagName(e) {
      return e.link ? this.builderLinkComponent || "a" : "div";
    },
    getWidth(e) {
      var t;
      return ((t = this.cols[e]) == null ? void 0 : t.width) || 100 / this.cols.length;
    },
    getColumnCssWidth(e) {
      const t = this.getWidth(e), n = this.gutterSize * (this.cols.length - 1) * (t / 100);
      return `calc(${t}% - ${n}px)`;
    },
    getTabletStyle({
      stackedStyle: e,
      desktopStyle: t
    }) {
      return this.stackAt === "tablet" ? e : t;
    },
    getMobileStyle({
      stackedStyle: e,
      desktopStyle: t
    }) {
      return this.stackAt === "never" ? t : e;
    },
    columnsCssVars() {
      return {
        "--flex-dir": this.flexDir,
        "--flex-dir-tablet": this.getTabletStyle({
          stackedStyle: this.flexDir,
          desktopStyle: "row"
        })
      };
    },
    columnCssVars(e) {
      const t = e === 0 ? 0 : this.gutterSize, n = this.getColumnCssWidth(e), o = `${t}px`, r = "100%", i = 0;
      return {
        ...{
          display: "flex",
          flexDirection: "column",
          alignItems: "stretch"
        },
        width: n,
        ["margin-left"]: o,
        "--column-width-mobile": this.getMobileStyle({
          stackedStyle: r,
          desktopStyle: n
        }),
        "--column-margin-left-mobile": this.getMobileStyle({
          stackedStyle: i,
          desktopStyle: o
        }),
        "--column-width-tablet": this.getTabletStyle({
          stackedStyle: r,
          desktopStyle: n
        }),
        "--column-margin-left-tablet": this.getTabletStyle({
          stackedStyle: i,
          desktopStyle: o
        })
      };
    },
    getWidthForBreakpointSize(e) {
      var n, o;
      return ko(
        ((o = (n = this.builderContext.content) == null ? void 0 : n.meta) == null ? void 0 : o.breakpoints) || {}
      )[e].max;
    },
    columnsStyles() {
      const e = `.${this.builderBlock.id}-breakpoints > .builder-column`;
      return `
        @media (max-width: ${this.getWidthForBreakpointSize("medium")}px) {
          .${this.builderBlock.id}-breakpoints {
            flex-direction: var(--flex-dir-tablet);
            align-items: stretch;
          }

          ${e} {
            width: var(--column-width-tablet) !important;
            margin-left: var(--column-margin-left-tablet) !important;
          }
        }

        @media (max-width: ${this.getWidthForBreakpointSize("small")}px) {
          .${this.builderBlock.id}-breakpoints {
            flex-direction: var(--flex-dir);
            align-items: stretch;
          }

          ${e} {
            width: var(--column-width-mobile) !important;
            margin-left: var(--column-margin-left-mobile) !important;
          }
        },
      `;
    },
    getAttributes(e, t) {
      return {
        ...e.link ? {
          href: e.link
        } : {},
        [j()]: "builder-column",
        style: ft(this.columnCssVars(t))
      };
    }
  }
});
function Io(e, t, n, o, r, i) {
  var u;
  const s = k("InlinedStyles"), l = k("Blocks"), a = k("DynamicRenderer");
  return d(), h("div", w({
    class: e.getColumnsClass((u = e.builderBlock) == null ? void 0 : u.id) + " div-1be3j8m9ewb",
    style: e.columnsCssVars()
  }, {}), [
    e.TARGET !== "reactNative" ? (d(), S(s, {
      key: 0,
      id: "builderio-columns",
      styles: e.columnsStyles(),
      nonce: e.builderContext.nonce
    }, null, 8, ["styles", "nonce"])) : C("", !0),
    (d(!0), h(I, null, L(e.columns, (p, f) => (d(), S(a, {
      key: f,
      TagName: e.getTagName(p),
      actionAttributes: {},
      attributes: e.getAttributes(p, f)
    }, {
      default: O(() => [
        E(l, {
          path: `columns.${f}.blocks`,
          parent: e.builderBlock.id,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          linkComponent: e.builderLinkComponent,
          blocks: p.blocks,
          styleProp: {
            flexGrow: "1"
          }
        }, null, 8, ["path", "parent", "context", "registeredComponents", "linkComponent", "blocks"])
      ]),
      _: 2
    }, 1032, ["TagName", "attributes"]))), 128))
  ], 16);
}
const wo = /* @__PURE__ */ v(To, [["render", Io], ["__scopeId", "data-v-ab15749a"]]), $o = y({
  name: "builder-fragment-component",
  props: []
});
function Ro(e, t, n, o, r, i) {
  return d(), h("span", null, [
    V(e.$slots, "default")
  ]);
}
const Eo = /* @__PURE__ */ v($o, [["render", Ro]]);
function Le(e) {
  return e.replace(/http(s)?:/, "");
}
function Ao(e = "", t, n) {
  const o = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), r = e.indexOf("?") !== -1 ? "&" : "?";
  return e.match(o) ? e.replace(o, "$1" + t + "=" + encodeURIComponent(n) + "$2") : e + r + t + "=" + encodeURIComponent(n);
}
function Po(e, t) {
  if (!e || !(e != null && e.match(/cdn\.shopify\.com/)) || !t)
    return e;
  if (t === "master")
    return Le(e);
  const n = e.match(/(_\d+x(\d+)?)?(\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?)/i);
  if (n) {
    const o = e.split(n[0]), r = n[3], i = t.match("x") ? t : `${t}x`;
    return Le(`${o[0]}_${i}${r}`);
  }
  return null;
}
function ne(e) {
  if (!e)
    return e;
  const t = [100, 200, 400, 800, 1200, 1600, 2e3];
  if (e.match(/builder\.io/)) {
    let n = e;
    const o = Number(e.split("?width=")[1]);
    return isNaN(o) || (n = `${n} ${o}w`), t.filter((r) => r !== o).map((r) => `${Ao(e, "width", r)} ${r}w`).concat([n]).join(", ");
  }
  return e.match(/cdn\.shopify\.com/) ? t.map((n) => [Po(e, `${n}x${n}`), n]).filter(([n]) => !!n).map(([n, o]) => `${n} ${o}w`).concat([e]).join(", ") : e;
}
const Bo = y({
  name: "builder-image",
  props: [
    "lazy",
    "image",
    "src",
    "srcset",
    "noWebp",
    "aspectRatio",
    "highPriority",
    "altText",
    "title",
    "backgroundPosition",
    "backgroundSize",
    "className",
    "sizes",
    "builderBlock",
    "fitContent"
  ],
  computed: {
    srcSetToUse() {
      var n;
      const t = this.image || this.src;
      if (!t || // We can auto add srcset for cdn.builder.io and shopify
      // images, otherwise you can supply this prop manually
      !(typeof t == "string" && (t.match(/builder\.io/) || t.match(/cdn\.shopify\.com/))))
        return this.srcset;
      if (!this.noWebp) {
        if (this.srcset && ((n = this.image) != null && n.includes("builder.io/api/v1/image"))) {
          if (!this.srcset.includes(this.image.split("?")[0]))
            return console.debug("Removed given srcset"), ne(t);
        } else if (this.image && !this.srcset)
          return ne(t);
        return ne(t);
      }
    },
    webpSrcSet() {
      var e;
      return (e = this.srcSetToUse) != null && e.match(/builder\.io/) && !this.noWebp ? this.srcSetToUse.replace(/\?/g, "?format=webp&") : "";
    },
    aspectRatioCss() {
      const e = {
        position: "absolute",
        height: "100%",
        width: "100%",
        left: "0px",
        top: "0px"
      };
      return this.aspectRatio ? e : void 0;
    }
  }
}), Vo = ["srcset"], No = ["loading", "fetchpriority", "alt", "title", "role", "src", "srcset", "sizes"], xo = {
  key: 2,
  class: "div-t43jfuqn6g-2"
};
function Wo(e, t, n, o, r, i) {
  var s, l, a, u, p, f;
  return d(), h(I, null, [
    z("picture", null, [
      e.webpSrcSet ? (d(), h("source", {
        key: 0,
        type: "image/webp",
        srcset: e.webpSrcSet
      }, null, 8, Vo)) : C("", !0),
      z("img", {
        loading: e.highPriority ? "eager" : "lazy",
        fetchpriority: e.highPriority ? "high" : "auto",
        alt: e.altText,
        title: e.title,
        role: e.altText ? void 0 : "presentation",
        style: M({
          objectPosition: e.backgroundPosition || "center",
          objectFit: e.backgroundSize || "cover",
          ...e.aspectRatioCss
        }),
        class: _(
          "builder-image" + (e.className ? " " + e.className : "") + " img-t43jfuqn6g"
        ),
        src: e.image,
        srcset: e.srcSetToUse,
        sizes: e.sizes
      }, null, 14, No)
    ]),
    e.aspectRatio && !((l = (s = e.builderBlock) == null ? void 0 : s.children) != null && l.length && e.fitContent) ? (d(), h("div", {
      key: 0,
      class: "builder-image-sizer div-t43jfuqn6g",
      style: M({
        paddingTop: e.aspectRatio * 100 + "%"
      })
    }, null, 4)) : C("", !0),
    (u = (a = e.builderBlock) == null ? void 0 : a.children) != null && u.length && e.fitContent ? V(e.$slots, "default", { key: 1 }, void 0, !0) : C("", !0),
    !e.fitContent && ((f = (p = e.builderBlock) == null ? void 0 : p.children) != null && f.length) ? (d(), h("div", xo, [
      V(e.$slots, "default", {}, void 0, !0)
    ])) : C("", !0)
  ], 64);
}
const Do = /* @__PURE__ */ v(Bo, [["render", Wo], ["__scopeId", "data-v-741b9bbc"]]), Oo = y({
  name: "builder-section-component",
  props: ["attributes", "maxWidth"],
  data() {
    return { filterAttrs: N };
  }
});
function Uo(e, t, n, o, r, i) {
  return d(), h("section", w({
    style: {
      width: "100%",
      alignSelf: "stretch",
      flexGrow: 1,
      boxSizing: "border-box",
      maxWidth: e.maxWidth || 1200,
      display: "flex",
      flexDirection: "column",
      alignItems: "stretch",
      marginLeft: "auto",
      marginRight: "auto"
    }
  }, e.filterAttrs(e.attributes, "v-on:", !1), F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), [
    V(e.$slots, "default")
  ], 16);
}
const Fo = /* @__PURE__ */ v(Oo, [["render", Uo]]);
function Lo(e, t, n, o) {
  function r(u) {
    return typeof u == "string";
  }
  function i(u) {
    return typeof u == "number";
  }
  function s(u, p) {
    return (() => {
      const c = p.property, m = p.operator;
      let b = p.value;
      if (p && p.property === "urlPath" && p.value && typeof p.value == "string" && p.value !== "/" && p.value.endsWith("/") && (b = p.value.slice(0, -1)), !(c && m))
        return !0;
      if (Array.isArray(b))
        return m === "isNot" ? b.every((P) => s(u, {
          property: c,
          operator: m,
          value: P
        })) : !!b.find((P) => s(u, {
          property: c,
          operator: m,
          value: P
        }));
      const g = u[c];
      if (Array.isArray(g))
        return g.includes(b);
      switch (m) {
        case "is":
          return g === b;
        case "isNot":
          return g !== b;
        case "contains":
          return (r(g) || Array.isArray(g)) && g.includes(String(b));
        case "startsWith":
          return r(g) && g.startsWith(String(b));
        case "endsWith":
          return r(g) && g.endsWith(String(b));
        case "greaterThan":
          return i(g) && i(b) && g > b;
        case "lessThan":
          return i(g) && i(b) && g < b;
        case "greaterThanOrEqualTo":
          return i(g) && i(b) && g >= b;
        case "lessThanOrEqualTo":
          return i(g) && i(b) && g <= b;
        default:
          return !1;
      }
    })();
  }
  const l = {
    query: t,
    startDate: n,
    endDate: o
  }, a = e.date && new Date(e.date) || /* @__PURE__ */ new Date();
  return l.startDate && new Date(l.startDate) > a || l.endDate && new Date(l.endDate) < a ? !1 : !l.query || !l.query.length ? !0 : l.query.every((u) => s(e, u));
}
const Ho = `function getPersonalizedVariant(variants, blockId, isHydrationTarget, locale) {
  if (!navigator.cookieEnabled) {
    return;
  }
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const attributes = JSON.parse(getCookie('builder.userAttributes') || '{}');
  if (locale) {
    attributes.locale = locale;
  }
  const winningVariantIndex = variants?.findIndex(function (variant) {
    return window.filterWithCustomTargeting(attributes, variant.query, variant.startDate, variant.endDate);
  });
  const parentDiv = document.currentScript?.parentElement;
  const variantId = parentDiv?.getAttribute('data-variant-id');
  const isDefaultVariant = variantId === \`\${blockId}-default\`;
  const isWinningVariant = winningVariantIndex !== -1 && variantId === \`\${blockId}-\${winningVariantIndex}\` || winningVariantIndex === -1 && isDefaultVariant;
  if (isWinningVariant && !isDefaultVariant) {
    parentDiv?.removeAttribute('hidden');
    parentDiv?.removeAttribute('aria-hidden');
  } else if (!isWinningVariant && isDefaultVariant) {
    parentDiv?.setAttribute('hidden', 'true');
    parentDiv?.setAttribute('aria-hidden', 'true');
  }
  if (isHydrationTarget) {
    if (!isWinningVariant) {
      const itsStyleEl = parentDiv?.previousElementSibling;
      if (itsStyleEl) {
        itsStyleEl.remove();
      }
      parentDiv?.remove();
    }
    const thisScript = document.currentScript;
    if (thisScript) {
      thisScript.remove();
    }
  }
}`, Mo = `function filterWithCustomTargeting(userAttributes, query, startDate, endDate) {
  function isString(val) {
    return typeof val === 'string';
  }
  function isNumber(val) {
    return typeof val === 'number';
  }
  function objectMatchesQuery(userattr, query) {
    const result = (() => {
      const property = query.property;
      const operator = query.operator;
      let testValue = query.value;
      if (query && query.property === 'urlPath' && query.value && typeof query.value === 'string' && query.value !== '/' && query.value.endsWith('/')) {
        testValue = query.value.slice(0, -1);
      }
      if (!(property && operator)) {
        return true;
      }
      if (Array.isArray(testValue)) {
        if (operator === 'isNot') {
          return testValue.every(val => objectMatchesQuery(userattr, {
            property,
            operator,
            value: val
          }));
        }
        return !!testValue.find(val => objectMatchesQuery(userattr, {
          property,
          operator,
          value: val
        }));
      }
      const value = userattr[property];
      if (Array.isArray(value)) {
        return value.includes(testValue);
      }
      switch (operator) {
        case 'is':
          return value === testValue;
        case 'isNot':
          return value !== testValue;
        case 'contains':
          return (isString(value) || Array.isArray(value)) && value.includes(String(testValue));
        case 'startsWith':
          return isString(value) && value.startsWith(String(testValue));
        case 'endsWith':
          return isString(value) && value.endsWith(String(testValue));
        case 'greaterThan':
          return isNumber(value) && isNumber(testValue) && value > testValue;
        case 'lessThan':
          return isNumber(value) && isNumber(testValue) && value < testValue;
        case 'greaterThanOrEqualTo':
          return isNumber(value) && isNumber(testValue) && value >= testValue;
        case 'lessThanOrEqualTo':
          return isNumber(value) && isNumber(testValue) && value <= testValue;
        default:
          return false;
      }
    })();
    return result;
  }
  const item = {
    query,
    startDate,
    endDate
  };
  const now = userAttributes.date && new Date(userAttributes.date) || new Date();
  if (item.startDate && new Date(item.startDate) > now) {
    return false;
  } else if (item.endDate && new Date(item.endDate) < now) {
    return false;
  }
  if (!item.query || !item.query.length) {
    return true;
  }
  return item.query.every(filter => {
    return objectMatchesQuery(userAttributes, filter);
  });
}`, jo = `function updateVisibilityStylesScript(variants, blockId, isHydrationTarget, locale) {
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const visibilityStylesEl = document.currentScript?.previousElementSibling;
  if (!visibilityStylesEl) {
    return;
  }
  if (isHydrationTarget) {
    visibilityStylesEl.remove();
    const currentScript = document.currentScript;
    if (currentScript) {
      currentScript.remove();
    }
  } else {
    const attributes = JSON.parse(getCookie('builder.userAttributes') || '{}');
    if (locale) {
      attributes.locale = locale;
    }
    const winningVariantIndex = variants?.findIndex(function (variant) {
      return window.filterWithCustomTargeting(attributes, variant.query, variant.startDate, variant.endDate);
    });
    if (winningVariantIndex !== -1) {
      let newStyleStr = variants?.map((_, index) => {
        if (index === winningVariantIndex) return '';
        return \`div[data-variant-id="\${blockId}-\${index}"] { display: none !important; } \`;
      }).join('') || '';
      newStyleStr += \`div[data-variant-id="\${blockId}-default"] { display: none !important; } \`;
      visibilityStylesEl.innerHTML = newStyleStr;
    }
  }
}`, oe = "default", Ko = "filterWithCustomTargeting", vt = "builderIoPersonalization", St = "updateVisibilityStylesScript", kt = ["react", "vue", "svelte", "qwik"], Ct = ["vue", "svelte", "qwik"];
function qo(e, t) {
  return !(e && e.length > 0) || !t ? !1 : Ct.includes($) ? !0 : !R();
}
function zo({
  variants: e,
  previewingIndex: t,
  isHydrated: n,
  filteredVariants: o,
  fallbackBlocks: r
}) {
  const i = {
    blocks: r ?? [],
    path: "this.children",
    index: oe
  };
  if (n && A()) {
    if (typeof t == "number" && t < ((e == null ? void 0 : e.length) ?? 0)) {
      const s = e == null ? void 0 : e[t];
      if (s)
        return {
          blocks: s.blocks,
          path: `variants.${t}.blocks`,
          index: t
        };
    }
    return i;
  }
  if (R()) {
    const s = o == null ? void 0 : o[0];
    if (s && e) {
      const l = e.indexOf(s);
      if (l !== -1)
        return {
          blocks: s.blocks,
          path: `variants.${l}.blocks`,
          index: l
        };
    }
  }
  return i;
}
const Go = () => `
  window.${Ko} = ${Mo}
  window.${vt} = ${Ho}
  window.${St} = ${jo}
  `, Tt = $ === "react", Jo = (e, t, n) => `window.${vt}(${JSON.stringify(e)}, "${t}", ${Tt}${n ? `, "${n}"` : ""})`, Qo = (e, t, n) => `window.${St}(${JSON.stringify(e)}, "${t}", ${Tt}${n ? `, "${n}"` : ""})`, ue = {
  "@type": "@builder.io/sdk:Element",
  layerName: "Accordion item title",
  responsiveStyles: {
    large: {
      marginTop: "10px",
      position: "relative",
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      paddingBottom: "10px"
    }
  },
  children: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        textAlign: "left",
        display: "flex",
        flexDirection: "column"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "I am an accordion title. Click me!"
      }
    }
  }]
}, pe = {
  "@type": "@builder.io/sdk:Element",
  layerName: "Accordion item detail",
  responsiveStyles: {
    large: {
      position: "relative",
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      marginTop: "10px",
      paddingBottom: "10px"
    }
  },
  children: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        paddingTop: "50px",
        textAlign: "left",
        display: "flex",
        flexDirection: "column",
        paddingBottom: "50px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "I am an accordion detail, hello!"
      }
    }
  }]
}, Yo = {
  name: "Builder:Accordion",
  canHaveChildren: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FagZ9n5CUKRfbL9t6CaJOyVSK4Es2%2Ffab6c1fd3fe542408cbdec078bca7f35",
  defaultStyles: {
    display: "flex",
    flexDirection: "column",
    alignItems: "stretch"
  },
  inputs: [{
    name: "items",
    type: "list",
    broadcast: !0,
    subFields: [{
      name: "title",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [ue]
    }, {
      name: "detail",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [pe]
    }],
    defaultValue: [{
      title: [ue],
      detail: [pe]
    }, {
      title: [ue],
      detail: [pe]
    }],
    showIf: (e) => !e.get("useChildrenForItems")
  }, {
    name: "oneAtATime",
    helperText: "Only allow opening one at a time (collapse all others when new item openned)",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "grid",
    helperText: "Display as a grid",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "gridRowWidth",
    helperText: "Display as a grid",
    type: "string",
    showIf: (e) => e.get("grid"),
    defaultValue: "25%"
  }, {
    name: "useChildrenForItems",
    type: "boolean",
    helperText: "Use child elements for each slide, instead of the array. Useful for dynamically repeating items",
    advanced: !0,
    defaultValue: !1,
    onChange: (e) => {
      e.get("useChildrenForItems") === !0 && e.set("items", []);
    }
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, Xo = (e) => e.toString(), Zo = y({
  name: "builder-accordion",
  components: { Blocks: q },
  props: [
    "grid",
    "oneAtATime",
    "items",
    "gridRowWidth",
    "builderBlock",
    "builderContext",
    "builderComponents",
    "builderLinkComponent"
  ],
  data() {
    return { open: [], convertOrderNumberToString: Xo };
  },
  computed: {
    onlyOneAtATime() {
      return !!(this.grid || this.oneAtATime);
    },
    accordionStyles() {
      return {
        display: "flex",
        alignItems: "stretch",
        flexDirection: "column",
        ...this.grid && {
          flexDirection: "row",
          alignItems: "flex-start",
          flexWrap: "wrap"
        }
      };
    },
    accordionTitleStyles() {
      const t = {
        ...{
          display: "flex",
          flexDirection: "column"
        },
        alignItems: "stretch",
        cursor: "pointer"
      };
      return Object.fromEntries(
        Object.entries(t).filter(([n, o]) => o !== void 0)
      );
    },
    openGridItemOrder() {
      let e = null;
      if (this.grid && this.open.length && document) {
        const n = this.open[0];
        let r = document.querySelector(
          `.builder-accordion-title[data-index="${n}"]`
        );
        if (e = n, r) {
          let i = r.getBoundingClientRect();
          for (; r = r && r.nextElementSibling; )
            if (r) {
              if (r.classList.contains("builder-accordion-detail"))
                continue;
              const s = r.getBoundingClientRect();
              if (s.left > i.left) {
                const l = parseInt(
                  r.getAttribute("data-index") || "",
                  10
                );
                isNaN(l) || (i = s, e = l);
              } else
                break;
            }
        }
      }
      return typeof e == "number" && (e = e + 1), e;
    },
    accordionDetailStyles() {
      const e = {
        order: typeof this.openGridItemOrder == "number" ? this.openGridItemOrder : void 0,
        ...this.grid && {
          width: "100%"
        }
      };
      return Object.fromEntries(
        Object.entries(e).filter(([t, n]) => n !== void 0)
      );
    }
  },
  methods: {
    getAccordionTitleClassName(e) {
      return `builder-accordion-title builder-accordion-title-${this.open.includes(e) ? "open" : "closed"}`;
    },
    getAccordionDetailClassName(e) {
      return `builder-accordion-detail builder-accordion-detail-${this.open.includes(e) ? "open" : "closed"}`;
    },
    onClick(e) {
      this.open.includes(e) ? this.open = this.onlyOneAtATime ? [] : this.open.filter((t) => t !== e) : this.open = this.onlyOneAtATime ? [e] : this.open.concat(e);
    }
  }
}), _o = ["data-index", "onClick"];
function er(e, t, n, o, r, i) {
  const s = k("Blocks");
  return d(), h("div", {
    class: "builder-accordion",
    style: M(e.accordionStyles)
  }, [
    (d(!0), h(I, null, L(e.items, (l, a) => (d(), h(I, { key: a }, [
      z("div", {
        class: _(e.getAccordionTitleClassName(a)),
        style: M({
          ...e.accordionTitleStyles,
          ...e.grid && {
            width: e.gridRowWidth,
            order: e.openGridItemOrder !== null ? e.convertOrderNumberToString(a) : e.convertOrderNumberToString(a + 1)
          }
        }),
        "data-index": a,
        onClick: async (u) => e.onClick(a)
      }, [
        E(s, {
          blocks: l.title,
          path: `items.${a}.title`,
          parent: e.builderBlock.id,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          linkComponent: e.builderLinkComponent
        }, null, 8, ["blocks", "path", "parent", "context", "registeredComponents", "linkComponent"])
      ], 14, _o),
      e.open.includes(a) ? (d(), h("div", {
        key: 0,
        class: _(e.getAccordionDetailClassName(a)),
        style: M(e.accordionDetailStyles)
      }, [
        E(s, {
          blocks: l.detail,
          path: `items.${a}.detail`,
          parent: e.builderBlock.id,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          linkComponent: e.builderLinkComponent
        }, null, 8, ["blocks", "path", "parent", "context", "registeredComponents", "linkComponent"])
      ], 6)) : C("", !0)
    ], 64))), 128))
  ], 4);
}
const tr = /* @__PURE__ */ v(Zo, [["render", er]]), nr = {
  name: "Core:Button",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F81a15681c3e74df09677dfc57a615b13",
  defaultStyles: {
    // TODO: make min width more intuitive and set one
    appearance: "none",
    paddingTop: "15px",
    paddingBottom: "15px",
    paddingLeft: "25px",
    paddingRight: "25px",
    backgroundColor: "#000000",
    color: "white",
    borderRadius: "4px",
    textAlign: "center",
    cursor: "pointer"
  },
  inputs: [{
    name: "text",
    type: "text",
    defaultValue: "Click me!",
    bubble: !0
  }, {
    name: "link",
    type: "url",
    bubble: !0
  }, {
    name: "openLinkInNewTab",
    type: "boolean",
    defaultValue: !1,
    friendlyName: "Open link in new tab"
  }],
  static: !0,
  noWrap: !0,
  shouldReceiveBuilderProps: {
    builderLinkComponent: !0
  }
}, or = {
  // TODO: ways to statically preprocess JSON for references, functions, etc
  name: "Columns",
  isRSC: !0,
  inputs: [{
    name: "columns",
    type: "array",
    broadcast: !0,
    subFields: [{
      name: "blocks",
      type: "array",
      hideFromUI: !0,
      defaultValue: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }, {
      name: "width",
      type: "number",
      hideFromUI: !0,
      helperText: "Width %, e.g. set to 50 to fill half of the space"
    }, {
      name: "link",
      type: "url",
      helperText: "Optionally set a url that clicking this column will link to"
    }],
    defaultValue: [{
      blocks: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }, {
      blocks: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }],
    onChange: (e) => {
      function t() {
        n.forEach((o) => {
          o.delete("width");
        });
      }
      const n = e.get("columns");
      Array.isArray(n) && n.find((r) => r.get("width")) && (n.find((i) => !i.get("width")) || n.reduce((l, a) => l + a.get("width"), 0) !== 100) && t();
    }
  }, {
    name: "space",
    type: "number",
    defaultValue: 20,
    helperText: "Size of gap between columns",
    advanced: !0
  }, {
    name: "stackColumnsAt",
    type: "string",
    defaultValue: "tablet",
    helperText: "Convert horizontal columns to vertical at what device size",
    enum: ["tablet", "mobile", "never"],
    advanced: !0
  }, {
    name: "reverseColumnsWhenStacked",
    type: "boolean",
    defaultValue: !1,
    helperText: "When stacking columns for mobile devices, reverse the ordering",
    advanced: !0
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, rr = {
  name: "Fragment",
  static: !0,
  hidden: !0,
  canHaveChildren: !0,
  noWrap: !0
}, Ae = ["jpeg", "jpg", "png", "svg", "webp", "gif", "jfif", "pjpeg", "pjp", "apng", "avif", "tif", "tiff", "heif", "bmp", "eps", "raw", "cr2", "nef", "orf", "sr2", "psd", "heic", "dib", "ai"], ir = ["mp4", "webm", "mkv", "flv", "vob", "ogv", "ogg", "drc", "gif", "gifv", "mng", "avi", "mov", "qt", "mts", "m2ts", "ts", "wmv", "yuv", "rm", "rmvb", "viv", "asf", "amv", "m4p", "mpeg", "mpe", "m2v", "m4v", "svi", "3gp", "3g2", "mxf", "roq", "nsv", "f4v", "f4p", "f4a", "f4b"], sr = {
  name: "Image",
  static: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4",
  defaultStyles: {
    position: "relative",
    minHeight: "20px",
    minWidth: "20px",
    overflow: "hidden"
  },
  canHaveChildren: !0,
  inputs: [{
    name: "image",
    type: "file",
    bubble: !0,
    allowedFileTypes: Ae,
    required: !0,
    defaultValue: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F72c80f114dc149019051b6852a9e3b7a",
    onChange: (e) => {
      e.delete("srcset"), e.delete("noWebp");
      function n(s, l = 6e4) {
        return new Promise((a, u) => {
          const p = document.createElement("img");
          let f = !1;
          p.onload = () => {
            f = !0, a(p);
          }, p.addEventListener("error", (c) => {
            console.warn("Image load failed", c.error), u(c.error);
          }), p.src = s, setTimeout(() => {
            f || u(new Error("Image load timed out"));
          }, l);
        });
      }
      function o(s) {
        return Math.round(s * 1e3) / 1e3;
      }
      const r = e.get("image"), i = e.get("aspectRatio");
      if (fetch(r).then((s) => s.blob()).then((s) => {
        s.type.includes("svg") && e.set("noWebp", !0);
      }), r && (!i || i === 0.7041))
        return n(r).then((s) => {
          const l = e.get("aspectRatio");
          e.get("image") === r && (!l || l === 0.7041) && s.width && s.height && (e.set("aspectRatio", o(s.height / s.width)), e.set("height", s.height), e.set("width", s.width));
        });
    }
  }, {
    name: "backgroundSize",
    type: "text",
    defaultValue: "cover",
    enum: [{
      label: "contain",
      value: "contain",
      helperText: "The image should never get cropped"
    }, {
      label: "cover",
      value: "cover",
      helperText: "The image should fill it's box, cropping when needed"
    }]
  }, {
    name: "backgroundPosition",
    type: "text",
    defaultValue: "center",
    enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"]
  }, {
    name: "altText",
    type: "string",
    helperText: "Text to display when the user has images off"
  }, {
    name: "title",
    type: "string",
    helperText: "Text to display when hovering over the asset"
  }, {
    name: "height",
    type: "number",
    hideFromUI: !0
  }, {
    name: "width",
    type: "number",
    hideFromUI: !0
  }, {
    name: "sizes",
    type: "string",
    hideFromUI: !0
  }, {
    name: "srcset",
    type: "string",
    hideFromUI: !0
  }, {
    name: "lazy",
    type: "boolean",
    defaultValue: !0,
    hideFromUI: !0
  }, {
    name: "fitContent",
    type: "boolean",
    helperText: "When child blocks are provided, fit to them instead of using the image's aspect ratio",
    defaultValue: !0
  }, {
    name: "highPriority",
    type: "boolean",
    advanced: !0,
    helperText: "Mark this image as high priority compared to other images on the page. This prevents lazy loading of the image and tells the browser to load this image before others on the page."
  }, {
    name: "aspectRatio",
    type: "number",
    helperText: "This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio",
    advanced: !0,
    defaultValue: 0.7041
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0
  }
}, ar = {
  name: "PersonalizationContainer",
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0
  },
  noWrap: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F37229ed30d8c41dfb10b8cca1992053a",
  canHaveChildren: !0,
  inputs: [{
    name: "variants",
    defaultValue: [],
    behavior: "personalizationVariantList",
    type: "list",
    subFields: [{
      name: "name",
      type: "text"
    }, {
      name: "query",
      friendlyName: "Targeting rules",
      type: "BuilderQuery",
      defaultValue: []
    }, {
      name: "startDate",
      type: "date"
    }, {
      name: "endDate",
      type: "date"
    }, {
      name: "blocks",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: []
    }]
  }]
}, Pe = y({
  render() {
    return Ke("script", {
      innerHTML: this.scriptStr,
      "data-id": this.id,
      nonce: this.nonce
    });
  },
  name: "inlined-script",
  props: ["scriptStr", "id", "nonce"]
}), lr = y({
  name: "builder-personalization-container",
  components: {
    Blocks: q,
    InlinedStyles: de,
    InlinedScript: Pe
  },
  props: [
    "builderContext",
    "variants",
    "builderBlock",
    "attributes",
    "previewingIndex",
    "builderComponents"
  ],
  data() {
    var e, t, n, o, r, i, s;
    return {
      userAttributes: ae.getUserAttributes(),
      scriptStr: Jo(
        this.variants,
        ((e = this.builderBlock) == null ? void 0 : e.id) || "none",
        (n = (t = this.builderContext) == null ? void 0 : t.rootState) == null ? void 0 : n.locale
      ),
      updateVisibilityStylesScript: Qo(
        this.variants,
        ((o = this.builderBlock) == null ? void 0 : o.id) || "none",
        (i = (r = this.builderContext) == null ? void 0 : r.rootState) == null ? void 0 : i.locale
      ),
      unsubscribers: [],
      shouldRenderVariants: qo(
        this.variants,
        G((s = this.builderContext) == null ? void 0 : s.canTrack)
      ),
      shouldResetVariants: !1,
      TARGET: $,
      DEFAULT_INDEX: oe,
      SDKS_REQUIRING_RESET_APPROACH: Ct
    };
  },
  mounted() {
    var t;
    this.shouldResetVariants = !0;
    const e = ae.subscribeOnUserAttributesChange(
      (n) => {
        this.userAttributes = n;
      },
      {
        fireImmediately: $ === "qwik"
      }
    );
    if (!(A() || Ce())) {
      const n = this.filteredVariants[0];
      this.$refs.rootRef && (this.$refs.rootRef.dispatchEvent(
        new CustomEvent("builder.variantLoaded", {
          detail: {
            variant: n || oe,
            content: (t = this.builderContext) == null ? void 0 : t.content
          },
          bubbles: !0
        })
      ), new IntersectionObserver((r) => {
        r.forEach((i) => {
          var s;
          i.isIntersecting && this.$refs.rootRef && this.$refs.rootRef.dispatchEvent(
            new CustomEvent("builder.variantDisplayed", {
              detail: {
                variant: n || oe,
                content: (s = this.builderContext) == null ? void 0 : s.content
              },
              bubbles: !0
            })
          );
        });
      }).observe(this.$refs.rootRef));
    }
    this.unsubscribers.push(e);
  },
  unmounted() {
    this.unsubscribers.forEach((e) => e());
  },
  computed: {
    attrs() {
      return {
        ...N(this.attributes, "v-on:", !1),
        ...N(this.attributes, "v-on:", !0),
        [j()]: `builder-personalization-container ${this.attributes[j()] || ""}`
      };
    },
    filteredVariants() {
      return (this.variants || []).filter((e) => {
        var t, n, o, r;
        return Lo(
          {
            ...(n = (t = this.builderContext) == null ? void 0 : t.rootState) != null && n.locale ? {
              locale: (r = (o = this.builderContext) == null ? void 0 : o.rootState) == null ? void 0 : r.locale
            } : {},
            ...this.userAttributes
          },
          e.query,
          e.startDate,
          e.endDate
        );
      });
    },
    blocksToRender() {
      var e;
      return zo({
        variants: this.variants,
        fallbackBlocks: (e = this.builderBlock) == null ? void 0 : e.children,
        isHydrated: this.shouldResetVariants,
        filteredVariants: this.filteredVariants,
        previewingIndex: this.previewingIndex
      });
    },
    hideVariantsStyleString() {
      return (this.variants || []).map(
        (e, t) => {
          var n;
          return `div[data-variant-id="${(n = this.builderBlock) == null ? void 0 : n.id}-${t}"] { display: none !important; } `;
        }
      ).join("");
    }
  }
});
function cr(e, t, n, o, r, i) {
  var u, p, f, c, m, b, g, P, U, B;
  const s = k("Blocks"), l = k("InlinedStyles"), a = k("InlinedScript");
  return d(), h("div", w({ ref: "rootRef" }, e.attrs), [
    e.shouldResetVariants && e.SDKS_REQUIRING_RESET_APPROACH.includes(e.TARGET) ? (d(), S(s, {
      key: 0,
      blocks: e.blocksToRender.blocks,
      parent: (u = e.builderBlock) == null ? void 0 : u.id,
      path: e.blocksToRender.path,
      context: e.builderContext,
      registeredComponents: e.builderComponents,
      BlocksWrapperProps: {
        ...(p = e.builderContext) == null ? void 0 : p.BlocksWrapperProps,
        "data-variant-id": `${(f = e.builderBlock) == null ? void 0 : f.id}-${e.blocksToRender.index}`
      }
    }, null, 8, ["blocks", "parent", "path", "context", "registeredComponents", "BlocksWrapperProps"])) : C("", !0),
    !e.shouldResetVariants && e.SDKS_REQUIRING_RESET_APPROACH.includes(e.TARGET) || !e.SDKS_REQUIRING_RESET_APPROACH.includes(e.TARGET) ? (d(), h(I, { key: 1 }, [
      e.shouldRenderVariants ? (d(), h(I, { key: 0 }, [
        E(l, {
          nonce: ((c = e.builderContext) == null ? void 0 : c.nonce) || "",
          styles: e.hideVariantsStyleString,
          id: `variants-styles-${(m = e.builderBlock) == null ? void 0 : m.id}`
        }, null, 8, ["nonce", "styles", "id"]),
        E(a, {
          nonce: ((b = e.builderContext) == null ? void 0 : b.nonce) || "",
          scriptStr: e.updateVisibilityStylesScript,
          id: `variants-visibility-script-${(g = e.builderBlock) == null ? void 0 : g.id}`
        }, null, 8, ["nonce", "scriptStr", "id"]),
        (d(!0), h(I, null, L(e.variants, (T, W) => {
          var J, Q, D, H;
          return d(), S(s, {
            key: `${(J = e.builderBlock) == null ? void 0 : J.id}-${W}`,
            BlocksWrapperProps: {
              ...(Q = e.builderContext) == null ? void 0 : Q.BlocksWrapperProps,
              "aria-hidden": !0,
              hidden: !0,
              "data-variant-id": `${(D = e.builderBlock) == null ? void 0 : D.id}-${W}`
            },
            blocks: T.blocks,
            parent: (H = e.builderBlock) == null ? void 0 : H.id,
            path: `component.options.variants.${W}.blocks`,
            context: e.builderContext,
            registeredComponents: e.builderComponents
          }, {
            default: O(() => {
              var Be, Ve;
              return [
                E(a, {
                  nonce: ((Be = e.builderContext) == null ? void 0 : Be.nonce) || "",
                  scriptStr: e.scriptStr,
                  id: `variants-script-${(Ve = e.builderBlock) == null ? void 0 : Ve.id}-${W}`
                }, null, 8, ["nonce", "scriptStr", "id"])
              ];
            }),
            _: 2
          }, 1032, ["BlocksWrapperProps", "blocks", "parent", "path", "context", "registeredComponents"]);
        }), 128))
      ], 64)) : C("", !0),
      E(s, {
        blocks: e.blocksToRender.blocks,
        parent: (P = e.builderBlock) == null ? void 0 : P.id,
        path: e.blocksToRender.path,
        context: e.builderContext,
        registeredComponents: e.builderComponents,
        BlocksWrapperProps: {
          ...(U = e.builderContext) == null ? void 0 : U.BlocksWrapperProps,
          "data-variant-id": `${(B = e.builderBlock) == null ? void 0 : B.id}-${e.blocksToRender.index}`
        }
      }, {
        default: O(() => {
          var T, W;
          return [
            e.shouldRenderVariants ? (d(), S(a, {
              key: 0,
              nonce: ((T = e.builderContext) == null ? void 0 : T.nonce) || "",
              scriptStr: e.scriptStr,
              id: `variants-script-${(W = e.builderBlock) == null ? void 0 : W.id}-${e.DEFAULT_INDEX}`
            }, null, 8, ["nonce", "scriptStr", "id"])) : C("", !0)
          ];
        }),
        _: 1
      }, 8, ["blocks", "parent", "path", "context", "registeredComponents", "BlocksWrapperProps"])
    ], 64)) : C("", !0)
  ], 16);
}
const dr = /* @__PURE__ */ v(lr, [["render", cr]]), ur = {
  name: "Core:Section",
  static: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a",
  inputs: [{
    name: "maxWidth",
    type: "number",
    defaultValue: 1200
  }, {
    name: "lazyLoad",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    description: "Only render this section when in view"
  }],
  defaultStyles: {
    paddingLeft: "20px",
    paddingRight: "20px",
    paddingTop: "50px",
    paddingBottom: "50px",
    marginTop: "0px",
    width: "100vw",
    marginLeft: "calc(50% - 50vw)"
  },
  canHaveChildren: !0,
  defaultChildren: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        textAlign: "center"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<p><b>I am a section! My content keeps from getting too wide, so that it's easy to read even on big screens.</b></p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>"
      }
    }
  }]
}, pr = {
  name: "Slot",
  isRSC: !0,
  description: "Allow child blocks to be inserted into this content when used as a Symbol",
  docsLink: "https://www.builder.io/c/docs/symbols-with-blocks",
  image: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F3aad6de36eae43b59b52c85190fdef56",
  // Maybe wrap this for canHaveChildren so bind children to this hm
  inputs: [{
    name: "name",
    type: "string",
    required: !0,
    defaultValue: "children"
  }],
  shouldReceiveBuilderProps: {
    builderContext: !0,
    builderComponents: !0
  }
}, mr = y({
  name: "builder-slot",
  components: { Blocks: q },
  props: ["builderContext", "name", "builderComponents"]
});
function hr(e, t, n, o, r, i) {
  var l, a, u;
  const s = k("Blocks");
  return d(), h("div", w(
    { style: {
      pointerEvents: "auto"
    } },
    !((l = e.builderContext.context) != null && l.symbolId) && {
      "builder-slot": e.name
    }
  ), [
    E(s, {
      parent: (a = e.builderContext.context) == null ? void 0 : a.symbolId,
      path: `symbol.data.${e.name}`,
      context: e.builderContext,
      registeredComponents: e.builderComponents,
      blocks: (u = e.builderContext.rootState) == null ? void 0 : u[e.name]
    }, null, 8, ["parent", "path", "context", "registeredComponents", "blocks"])
  ], 16);
}
const fr = /* @__PURE__ */ v(mr, [["render", hr]]), br = {
  name: "Symbol",
  noWrap: !0,
  static: !0,
  isRSC: !0,
  inputs: [{
    name: "symbol",
    type: "uiSymbol"
  }, {
    name: "dataOnly",
    helperText: "Make this a data symbol that doesn't display any UI",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    hideFromUI: !0
  }, {
    name: "inheritState",
    helperText: "Inherit the parent component state and data",
    type: "boolean",
    defaultValue: !1,
    advanced: !0
  }, {
    name: "renderToLiquid",
    helperText: "Render this symbols contents to liquid. Turn off to fetch with javascript and use custom targeting",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    hideFromUI: !0
  }, {
    name: "useChildren",
    hideFromUI: !0,
    type: "boolean"
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, me = {
  "@type": "@builder.io/sdk:Element",
  responsiveStyles: {
    large: {
      paddingLeft: "20px",
      paddingRight: "20px",
      paddingTop: "10px",
      paddingBottom: "10px",
      minWidth: "100px",
      textAlign: "center",
      display: "flex",
      flexDirection: "column",
      cursor: "pointer",
      userSelect: "none"
    }
  },
  component: {
    name: "Text",
    options: {
      text: "New tab"
    }
  }
}, he = {
  "@type": "@builder.io/sdk:Element",
  responsiveStyles: {
    large: {
      height: "200px",
      display: "flex",
      marginTop: "20px",
      flexDirection: "column"
    }
  },
  component: {
    name: "Text",
    options: {
      text: "New tab content "
    }
  }
}, gr = {
  name: "Builder: Tabs",
  inputs: [{
    name: "tabs",
    type: "list",
    broadcast: !0,
    subFields: [{
      name: "label",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [me]
    }, {
      name: "content",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [he]
    }],
    defaultValue: [{
      label: [{
        ...me,
        component: {
          name: "Text",
          options: {
            text: "Tab 1"
          }
        }
      }],
      content: [{
        ...he,
        component: {
          name: "Text",
          options: {
            text: "Tab 1 content"
          }
        }
      }]
    }, {
      label: [{
        ...me,
        component: {
          name: "Text",
          options: {
            text: "Tab 2"
          }
        }
      }],
      content: [{
        ...he,
        component: {
          name: "Text",
          options: {
            text: "Tab 2 content"
          }
        }
      }]
    }]
  }, {
    name: "activeTabStyle",
    type: "uiStyle",
    helperText: "CSS styles for the active tab",
    defaultValue: {
      backgroundColor: "rgba(0, 0, 0, 0.1)"
    }
  }, {
    name: "defaultActiveTab",
    type: "number",
    helperText: 'Default tab to open to. Set to "1" for the first tab, "2" for the second, or choose "0" for none',
    defaultValue: 1,
    advanced: !0
  }, {
    name: "collapsible",
    type: "boolean",
    helperText: "If on, clicking an open tab closes it so no tabs are active",
    defaultValue: !1,
    advanced: !0
  }, {
    name: "tabHeaderLayout",
    type: "enum",
    helperText: "Change the layout of the tab headers (uses justify-content)",
    defaultValue: "flex-start",
    enum: [{
      label: "Center",
      value: "center"
    }, {
      label: "Space between",
      value: "space-between"
    }, {
      label: "Space around",
      value: "space-around"
    }, {
      label: "Left",
      value: "flex-start"
    }, {
      label: "Right",
      value: "flex-end"
    }]
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, yr = y({
  name: "builder-tabs",
  components: { Blocks: q },
  props: [
    "defaultActiveTab",
    "tabs",
    "activeTabStyle",
    "collapsible",
    "tabHeaderLayout",
    "builderBlock",
    "builderContext",
    "builderComponents",
    "builderLinkComponent"
  ],
  data() {
    return { activeTab: this.defaultActiveTab ? this.defaultActiveTab - 1 : 0 };
  },
  methods: {
    activeTabContent(e) {
      return this.tabs && this.tabs[e].content;
    },
    getTabStyle(e) {
      return e === this.activeTab ? this.activeTabStyle : {};
    },
    onClick(e) {
      e === this.activeTab && this.collapsible ? this.activeTab = -1 : this.activeTab = e;
    }
  }
}), vr = ["onClick"], Sr = { key: 0 };
function kr(e, t, n, o, r, i) {
  const s = k("Blocks");
  return d(), h("div", null, [
    z("div", {
      class: "builder-tabs-wrap",
      style: M({
        display: "flex",
        flexDirection: "row",
        justifyContent: e.tabHeaderLayout || "flex-start",
        overflow: "auto"
      })
    }, [
      (d(!0), h(I, null, L(e.tabs, (l, a) => (d(), h("span", {
        key: a,
        class: _(`builder-tab-wrap ${e.activeTab === a ? "builder-tab-active" : ""}`),
        style: M(e.getTabStyle(a)),
        onClick: async (u) => e.onClick(a)
      }, [
        E(s, {
          parent: e.builderBlock.id,
          path: `tabs.${a}.label`,
          blocks: l.label,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          linkComponent: e.builderLinkComponent
        }, null, 8, ["parent", "path", "blocks", "context", "registeredComponents", "linkComponent"])
      ], 14, vr))), 128))
    ], 4),
    e.activeTabContent(e.activeTab) ? (d(), h("div", Sr, [
      E(s, {
        parent: e.builderBlock.id,
        path: `tabs.${e.activeTab}.content`,
        blocks: e.activeTabContent(e.activeTab),
        context: e.builderContext,
        registeredComponents: e.builderComponents,
        linkComponent: e.builderLinkComponent
      }, null, 8, ["parent", "path", "blocks", "context", "registeredComponents", "linkComponent"])
    ])) : C("", !0)
  ]);
}
const Cr = /* @__PURE__ */ v(yr, [["render", kr]]), Tr = {
  shouldReceiveBuilderProps: {},
  name: "Text",
  static: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-text_fields-24px%20(1).svg?alt=media&token=12177b73-0ee3-42ca-98c6-0dd003de1929",
  inputs: [{
    name: "text",
    type: "html",
    required: !0,
    autoFocus: !0,
    bubble: !0,
    defaultValue: "Enter some text..."
  }],
  defaultStyles: {
    lineHeight: "normal",
    height: "auto",
    textAlign: "center"
  }
}, Ir = y({
  name: "builder-text",
  props: ["text"]
}), wr = ["innerHTML"];
function $r(e, t, n, o, r, i) {
  var s;
  return d(), h("div", {
    class: "builder-text",
    innerHTML: ((s = e.text) == null ? void 0 : s.toString()) || "",
    style: {
      outline: "none"
    }
  }, null, 8, wr);
}
const Rr = /* @__PURE__ */ v(Ir, [["render", $r]]), Er = {
  name: "Custom Code",
  static: !0,
  requiredPermissions: ["editCode"],
  inputs: [{
    name: "code",
    type: "html",
    required: !0,
    defaultValue: "<p>Hello there, I am custom HTML code!</p>",
    code: !0
  }, {
    name: "replaceNodes",
    type: "boolean",
    helperText: "Preserve server rendered dom nodes",
    advanced: !0
  }, {
    name: "scriptsClientOnly",
    type: "boolean",
    defaultValue: !1,
    helperText: "Only print and run scripts on the client. Important when scripts influence DOM that could be replaced when client loads",
    advanced: !0
  }]
}, Ar = y({
  name: "builder-custom-code",
  props: ["code", "replaceNodes"],
  data() {
    return { scriptsInserted: [], scriptsRun: [] };
  },
  mounted() {
    this.runScripts();
  },
  watch: {
    onUpdateHook0: {
      handler() {
        A() && setTimeout(() => {
          this.runScripts();
        }, 0);
      },
      immediate: !0
    }
  },
  computed: {
    onUpdateHook0() {
      return {
        0: this.code
      };
    }
  },
  methods: {
    runScripts() {
      var t;
      if (!this.$refs.elementRef || !((t = this.$refs.elementRef) != null && t.getElementsByTagName) || typeof window > "u")
        return;
      const e = this.$refs.elementRef.getElementsByTagName("script");
      for (let n = 0; n < e.length; n++) {
        const o = e[n];
        if (o.src) {
          if (this.scriptsInserted.includes(o.src))
            continue;
          this.scriptsInserted.push(o.src);
          const r = document.createElement("script");
          r.async = !0, r.src = o.src, document.head.appendChild(r);
        } else if (!o.type || [
          "text/javascript",
          "application/javascript",
          "application/ecmascript"
        ].includes(o.type)) {
          if (this.scriptsRun.includes(o.innerText))
            continue;
          try {
            this.scriptsRun.push(o.innerText), new Function(o.innerText)();
          } catch (r) {
            x.warn(
              "[BUILDER.IO] `CustomCode`: Error running script:",
              r
            );
          }
        }
      }
    }
  }
}), Pr = ["innerHTML"];
function Br(e, t, n, o, r, i) {
  return d(), h("div", {
    ref: "elementRef",
    class: _("builder-custom-code" + (e.replaceNodes ? " replace-nodes" : "")),
    innerHTML: e.code
  }, null, 10, Pr);
}
const Vr = /* @__PURE__ */ v(Ar, [["render", Br]]), Nr = {
  name: "Embed",
  static: !0,
  inputs: [{
    name: "url",
    type: "url",
    required: !0,
    defaultValue: "",
    helperText: "e.g. enter a youtube url, google map, etc"
  }, {
    name: "content",
    type: "html",
    defaultValue: '<div style="padding: 20px; text-align: center">(Choose an embed URL)<div>',
    hideFromUI: !0
  }]
}, xr = ["text/javascript", "application/javascript", "application/ecmascript"], Wr = (e) => xr.includes(e.type), Dr = y({
  name: "builder-embed",
  props: ["content"],
  data() {
    return { scriptsInserted: [], scriptsRun: [], ranInitFn: !1 };
  },
  watch: {
    onUpdateHook0: {
      handler() {
        this.$refs.elem && !this.ranInitFn && (this.ranInitFn = !0, this.findAndRunScripts());
      },
      immediate: !0
    }
  },
  computed: {
    onUpdateHook0() {
      return {
        0: this.$refs.elem,
        1: this.ranInitFn
      };
    }
  },
  methods: {
    findAndRunScripts() {
      if (!this.$refs.elem || !this.$refs.elem.getElementsByTagName)
        return;
      const e = this.$refs.elem.getElementsByTagName("script");
      for (let t = 0; t < e.length; t++) {
        const n = e[t];
        if (n.src && !this.scriptsInserted.includes(n.src)) {
          this.scriptsInserted.push(n.src);
          const o = document.createElement("script");
          o.async = !0, o.src = n.src, document.head.appendChild(o);
        } else if (Wr(n) && !this.scriptsRun.includes(n.innerText))
          try {
            this.scriptsRun.push(n.innerText), new Function(n.innerText)();
          } catch (o) {
            x.warn("[BUILDER.IO] `Embed`: Error running script:", o);
          }
      }
    }
  }
}), Or = ["innerHTML"];
function Ur(e, t, n, o, r, i) {
  return d(), h("div", {
    class: "builder-embed",
    ref: "elem",
    innerHTML: e.content
  }, null, 8, Or);
}
const Fr = /* @__PURE__ */ v(Dr, [["render", Ur]]), Lr = {
  name: "Form:Form",
  // editableTags: ['builder-form-error']
  defaults: {
    responsiveStyles: {
      large: {
        marginTop: "15px",
        paddingBottom: "15px"
      }
    }
  },
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5",
  inputs: [{
    name: "sendSubmissionsTo",
    type: "string",
    // TODO: save to builder data and user can download as csv
    // TODO: easy for mode too or computed add/remove fields form mode
    // so you can edit details and high level mode at same time...
    // Later - more integrations like mailchimp
    // /api/v1/form-submit?to=mailchimp
    enum: [{
      label: "Send to email",
      value: "email",
      helperText: "Send form submissions to the email address of your choosing"
    }, {
      label: "Custom",
      value: "custom",
      helperText: "Handle where the form requests go manually with a little code, e.g. to your own custom backend"
    }],
    defaultValue: "email"
  }, {
    name: "sendSubmissionsToEmail",
    type: "string",
    required: !0,
    // TODO: required: () => options.get("sendSubmissionsTo") === "email"
    defaultValue: "your@email.com",
    showIf: 'options.get("sendSubmissionsTo") === "email"'
  }, {
    name: "sendWithJs",
    type: "boolean",
    helperText: "Set to false to use basic html form action",
    defaultValue: !0,
    showIf: 'options.get("sendSubmissionsTo") === "custom"'
  }, {
    name: "name",
    type: "string",
    defaultValue: "My form"
    // advanced: true
  }, {
    name: "action",
    type: "string",
    helperText: "URL to send the form data to",
    showIf: 'options.get("sendSubmissionsTo") === "custom"'
  }, {
    name: "contentType",
    type: "string",
    defaultValue: "application/json",
    advanced: !0,
    // TODO: do automatically if file input
    enum: ["application/json", "multipart/form-data", "application/x-www-form-urlencoded"],
    showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true'
  }, {
    name: "method",
    type: "string",
    showIf: 'options.get("sendSubmissionsTo") === "custom"',
    defaultValue: "POST",
    advanced: !0
  }, {
    name: "previewState",
    type: "string",
    // TODO: persist: false flag
    enum: ["unsubmitted", "sending", "success", "error"],
    defaultValue: "unsubmitted",
    helperText: 'Choose a state to edit, e.g. choose "success" to show what users see on success and edit the message',
    showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true'
  }, {
    name: "successUrl",
    type: "url",
    helperText: "Optional URL to redirect the user to on form submission success",
    showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true'
  }, {
    name: "resetFormOnSubmit",
    type: "boolean",
    showIf: "options.get('sendSubmissionsTo') === 'custom' && options.get('sendWithJs') === true",
    advanced: !0
  }, {
    name: "successMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Thanks!</span>"
        }
      }
    }]
  }, {
    name: "validate",
    type: "boolean",
    defaultValue: !0,
    advanced: !0
  }, {
    name: "errorMessagePath",
    type: "text",
    advanced: !0,
    helperText: 'Path to where to get the error message from in a JSON response to display to the user, e.g. "error.message" for a response like { "error": { "message": "this username is taken" }}'
  }, {
    name: "errorMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      bindings: {
        "component.options.text": "state.formErrorMessage || block.component.options.text"
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Form submission error :( Please check your answers and try again</span>"
        }
      }
    }]
  }, {
    name: "sendingMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Sending...</span>"
        }
      }
    }]
  }, {
    name: "customHeaders",
    type: "map",
    valueType: {
      type: "string"
    },
    advanced: !0,
    showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true'
  }],
  noWrap: !0,
  canHaveChildren: !0,
  defaultChildren: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<span>Enter your name</span>"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:Input",
      options: {
        name: "name",
        placeholder: "Jane Doe"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<span>Enter your email</span>"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:Input",
      options: {
        name: "email",
        placeholder: "jane@doe.com"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:SubmitButton",
      options: {
        text: "Submit"
      }
    }
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, Hr = ["production", "qa", "test", "development", "dev", "cdn-qa", "cloud", "fast", "cdn2", "cdn-prod"], Mr = () => {
  const e = process.env.NODE_ENV || "production";
  return Hr.includes(e) ? e : "production";
}, jr = y({
  name: "builder-form-component",
  components: { Blocks: q },
  props: [
    "builderContext",
    "previewState",
    "sendWithJs",
    "sendSubmissionsTo",
    "action",
    "customHeaders",
    "contentType",
    "sendSubmissionsToEmail",
    "name",
    "method",
    "errorMessagePath",
    "resetFormOnSubmit",
    "successUrl",
    "validate",
    "attributes",
    "errorMessage",
    "sendingMessage",
    "successMessage"
  ],
  data() {
    return {
      formState: "unsubmitted",
      responseData: null,
      formErrorMessage: "",
      filterAttrs: N
    };
  },
  methods: {
    mergeNewRootState(e) {
      var n, o;
      const t = {
        ...this.builderContext.rootState,
        ...e
      };
      this.builderContext.rootSetState ? (o = (n = this.builderContext).rootSetState) == null || o.call(n, t) : this.builderContext.rootState = t;
    },
    submissionState() {
      return A() && this.previewState || this.formState;
    },
    errorResponse(e) {
      return JSON.stringify(e, null, 2);
    },
    onSubmit(e) {
      var n;
      const t = this.sendWithJs || this.sendSubmissionsTo === "email";
      if (this.sendSubmissionsTo === "zapier")
        e.preventDefault();
      else if (t) {
        if (!(this.action || this.sendSubmissionsTo === "email")) {
          e.preventDefault();
          return;
        }
        e.preventDefault();
        const o = e.currentTarget || e.target, r = this.customHeaders || {};
        let i;
        const s = new FormData(o), l = Array.from(o.querySelectorAll("input,select,textarea")).filter((c) => !!c.name).filter(
          (c) => !!c.name && (c.type !== "radio" || c.checked)
        ).map((c) => {
          let m;
          const b = c.name;
          if (c instanceof HTMLInputElement)
            if (c.type === "radio") {
              if (c.checked)
                return m = c.value, {
                  key: b,
                  value: m
                };
            } else if (c.type === "checkbox")
              m = c.checked;
            else if (c.type === "number" || c.type === "range") {
              const g = c.valueAsNumber;
              isNaN(g) || (m = g);
            } else
              c.type === "file" ? m = c.files : m = c.value;
          else
            m = c.value;
          return {
            key: b,
            value: m
          };
        });
        let a = this.contentType;
        if (this.sendSubmissionsTo === "email" && (a = "multipart/form-data"), Array.from(l).forEach(({ value: c }) => {
          (c instanceof File || Array.isArray(c) && c[0] instanceof File || c instanceof FileList) && (a = "multipart/form-data");
        }), a !== "application/json")
          i = s;
        else {
          const c = {};
          Array.from(l).forEach(({ value: m, key: b }) => {
            qe(c, b, m);
          }), i = JSON.stringify(c);
        }
        a && a !== "multipart/form-data" && (t && ((n = this.action) != null && n.includes("zapier.com")) || (r["content-type"] = a));
        const u = new CustomEvent("presubmit", {
          detail: {
            body: i
          }
        });
        if (this.$refs.formRef && (this.$refs.formRef.dispatchEvent(u), u.defaultPrevented))
          return;
        if (this.formState = "sending", this.sendSubmissionsTo === "email" && (this.sendSubmissionsToEmail === "your@email.com" || !this.sendSubmissionsToEmail)) {
          const c = "SubmissionsToEmail is required when sendSubmissionsTo is set to email";
          console.error(c), this.formState = "error", this.mergeNewRootState({
            formErrorMessage: c
          });
          return;
        }
        const p = `${Mr() === "dev" ? "http://localhost:5000" : "https://builder.io"}/api/v1/form-submit?apiKey=${this.builderContext.apiKey}&to=${btoa(
          this.sendSubmissionsToEmail || ""
        )}&name=${encodeURIComponent(this.name || "")}`, f = this.sendSubmissionsTo === "email" ? p : this.action;
        Ie(f), fetch(f, {
          body: i,
          headers: r,
          method: this.method || "post"
        }).then(
          async (c) => {
            var g, P;
            let m;
            const b = c.headers.get("content-type");
            if (b && b.indexOf("application/json") !== -1 ? m = await c.json() : m = await c.text(), !c.ok) {
              const U = new CustomEvent("submit:error", {
                detail: {
                  error: m,
                  status: c.status
                }
              });
              if ((g = this.$refs.formRef) != null && g.nativeElement && ((P = this.$refs.formRef) == null || P.nativeElement.dispatchEvent(
                U
              ), U.defaultPrevented))
                return;
              this.responseData = m, this.formState = "error";
              let B = this.errorMessagePath ? Je(m, this.errorMessagePath) : m.message || m.error || m;
              typeof B != "string" && (B = JSON.stringify(B)), this.formErrorMessage = B, this.mergeNewRootState({
                formErrorMessage: B
              });
              return;
            }
            if (this.responseData = m, this.formState = c.ok ? "success" : "error", c.ok) {
              const U = new CustomEvent("submit:success", {
                detail: {
                  res: c,
                  body: m
                }
              });
              if (this.$refs.formRef) {
                if (this.$refs.formRef.dispatchEvent(U), U.defaultPrevented)
                  return;
                this.resetFormOnSubmit !== !1 && this.$refs.formRef.reset();
              }
              if (this.successUrl)
                if (this.$refs.formRef) {
                  const B = new CustomEvent("route", {
                    detail: {
                      url: this.successUrl
                    }
                  });
                  this.$refs.formRef.dispatchEvent(B), B.defaultPrevented || (location.href = this.successUrl);
                } else
                  location.href = this.successUrl;
            }
          },
          (c) => {
            const m = new CustomEvent("submit:error", {
              detail: {
                error: c
              }
            });
            this.$refs.formRef && (this.$refs.formRef.dispatchEvent(m), m.defaultPrevented) || (this.responseData = c, this.formState = "error");
          }
        );
      }
    }
  }
}), Kr = ["validate", "action", "method", "name"], qr = {
  key: 2,
  class: "builder-form-error-text pre-2oa2wtipkzk"
};
function zr(e, t, n, o, r, i) {
  const s = k("Blocks");
  return d(), h("form", w({
    validate: e.validate,
    ref: "formRef",
    action: !e.sendWithJs && e.action,
    method: e.method,
    name: e.name,
    onSubmit: t[0] || (t[0] = async (l) => e.onSubmit(l))
  }, { ...e.filterAttrs(e.attributes, "v-on:", !1) }, F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), [
    V(e.$slots, "default", {}, void 0, !0),
    e.submissionState() === "error" ? (d(), S(s, {
      key: 0,
      path: "errorMessage",
      blocks: e.errorMessage,
      context: e.builderContext
    }, null, 8, ["blocks", "context"])) : C("", !0),
    e.submissionState() === "sending" ? (d(), S(s, {
      key: 1,
      path: "sendingMessage",
      blocks: e.sendingMessage,
      context: e.builderContext
    }, null, 8, ["blocks", "context"])) : C("", !0),
    e.submissionState() === "error" && e.responseData ? (d(), h("pre", qr, le(e.errorResponse(e.responseData)), 1)) : C("", !0),
    e.submissionState() === "success" ? (d(), S(s, {
      key: 3,
      path: "successMessage",
      blocks: e.successMessage,
      context: e.builderContext
    }, null, 8, ["blocks", "context"])) : C("", !0)
  ], 16, Kr);
}
const Gr = /* @__PURE__ */ v(jr, [["render", zr], ["__scopeId", "data-v-77c7888c"]]), Jr = {
  name: "Form:Input",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fad6f37889d9e40bbbbc72cdb5875d6ca",
  inputs: [
    {
      name: "type",
      type: "text",
      enum: ["text", "number", "email", "url", "checkbox", "radio", "range", "date", "datetime-local", "search", "tel", "time", "file", "month", "week", "password", "color", "hidden"],
      defaultValue: "text"
    },
    {
      name: "name",
      type: "string",
      required: !0,
      helperText: 'Every input in a form needs a unique name describing what it takes, e.g. "email"'
    },
    {
      name: "placeholder",
      type: "string",
      defaultValue: "Hello there",
      helperText: "Text to display when there is no value"
    },
    // TODO: handle value vs default value automatically like ng-model
    {
      name: "defaultValue",
      type: "string"
    },
    {
      name: "value",
      type: "string",
      advanced: !0
    },
    {
      name: "required",
      type: "boolean",
      helperText: "Is this input required to be filled out to submit a form",
      defaultValue: !1
    }
  ],
  noWrap: !0,
  static: !0,
  defaultStyles: {
    paddingTop: "10px",
    paddingBottom: "10px",
    paddingLeft: "10px",
    paddingRight: "10px",
    borderRadius: "3px",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: "#ccc"
  }
}, Qr = y({
  name: "builder-form-input-component",
  props: [
    "attributes",
    "defaultValue",
    "placeholder",
    "type",
    "name",
    "value",
    "required"
  ],
  data() {
    return { isEditing: A, filterAttrs: N };
  }
}), Yr = ["placeholder", "type", "name", "value", "defaultValue", "required"];
function Xr(e, t, n, o, r, i) {
  return d(), h("input", w({
    key: e.isEditing() && e.defaultValue ? e.defaultValue : "default-key",
    placeholder: e.placeholder,
    type: e.type,
    name: e.name,
    value: e.value,
    defaultValue: e.defaultValue,
    required: e.required
  }, e.filterAttrs(e.attributes, "v-on:", !1), F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), null, 16, Yr);
}
const Zr = /* @__PURE__ */ v(Qr, [["render", Xr]]), _r = {
  name: "Form:Select",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F83acca093fb24aaf94dee136e9a4b045",
  defaultStyles: {
    alignSelf: "flex-start"
  },
  inputs: [{
    name: "options",
    type: "list",
    required: !0,
    subFields: [{
      name: "value",
      type: "text",
      required: !0
    }, {
      name: "name",
      type: "text"
    }],
    defaultValue: [{
      value: "option 1"
    }, {
      value: "option 2"
    }]
  }, {
    name: "name",
    type: "string",
    required: !0,
    helperText: 'Every select in a form needs a unique name describing what it gets, e.g. "email"'
  }, {
    name: "defaultValue",
    type: "string"
  }, {
    name: "value",
    type: "string",
    advanced: !0
  }, {
    name: "required",
    type: "boolean",
    defaultValue: !1
  }],
  static: !0,
  noWrap: !0
}, ei = y({
  name: "builder-select-component",
  props: ["attributes", "value", "defaultValue", "name", "required", "options"],
  data() {
    return { isEditing: A, filterAttrs: N };
  }
}), ti = ["value", "defaultValue", "name", "required"], ni = ["value"];
function oi(e, t, n, o, r, i) {
  return d(), h("select", w({
    value: e.value,
    key: e.isEditing() && e.defaultValue ? e.defaultValue : "default-key",
    defaultValue: e.defaultValue,
    name: e.name,
    required: e.required
  }, e.filterAttrs(e.attributes, "v-on:", !1), F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), [
    (d(!0), h(I, null, L(e.options, (s, l) => (d(), h("option", {
      key: `${s.name}-${l}`,
      value: s.value
    }, le(s.name || s.value), 9, ni))), 128))
  ], 16, ti);
}
const ri = /* @__PURE__ */ v(ei, [["render", oi]]), ii = {
  name: "Form:SubmitButton",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fdf2820ffed1f4349a94c40b3221f5b98",
  defaultStyles: {
    appearance: "none",
    paddingTop: "15px",
    paddingBottom: "15px",
    paddingLeft: "25px",
    paddingRight: "25px",
    backgroundColor: "#3898EC",
    color: "white",
    borderRadius: "4px",
    cursor: "pointer"
  },
  inputs: [{
    name: "text",
    type: "text",
    defaultValue: "Click me"
  }],
  static: !0,
  noWrap: !0
  // TODO: optional children? maybe as optional form input
  // that only shows if advanced setting is flipped
  // TODO: defaultChildren
  // canHaveChildren: true,
}, si = y({
  name: "builder-submit-button",
  props: ["attributes", "text"],
  data() {
    return { filterAttrs: N };
  }
});
function ai(e, t, n, o, r, i) {
  return d(), h("button", w({ type: "submit" }, e.filterAttrs(e.attributes, "v-on:", !1), F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), le(e.text), 17);
}
const li = /* @__PURE__ */ v(si, [["render", ai]]), ci = {
  name: "Form:TextArea",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Ff74a2f3de58c4c3e939204e5b6b8f6c3",
  inputs: [{
    advanced: !0,
    name: "value",
    type: "string"
  }, {
    name: "name",
    type: "string",
    required: !0,
    helperText: 'Every input in a form needs a unique name describing what it gets, e.g. "email"'
  }, {
    name: "defaultValue",
    type: "string"
  }, {
    name: "placeholder",
    type: "string",
    defaultValue: "Hello there"
  }, {
    name: "required",
    type: "boolean",
    defaultValue: !1
  }],
  defaultStyles: {
    paddingTop: "10px",
    paddingBottom: "10px",
    paddingLeft: "10px",
    paddingRight: "10px",
    borderRadius: "3px",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: "#ccc"
  },
  static: !0,
  noWrap: !0
}, di = y({
  name: "builder-textarea",
  props: [
    "attributes",
    "placeholder",
    "name",
    "value",
    "defaultValue",
    "required"
  ],
  data() {
    return { filterAttrs: N };
  }
}), ui = ["placeholder", "name", "value", "defaultValue", "required"];
function pi(e, t, n, o, r, i) {
  return d(), h("textarea", w({
    placeholder: e.placeholder,
    name: e.name,
    value: e.value,
    defaultValue: e.defaultValue,
    required: e.required
  }, e.filterAttrs(e.attributes, "v-on:", !1), F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), null, 16, ui);
}
const mi = /* @__PURE__ */ v(di, [["render", pi]]), hi = {
  name: "Raw:Img",
  hideFromInsertMenu: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4",
  inputs: [{
    name: "image",
    bubble: !0,
    type: "file",
    allowedFileTypes: Ae,
    required: !0
  }, {
    name: "backgroundSize",
    type: "text",
    defaultValue: "cover",
    enum: [{
      label: "contain",
      value: "contain",
      helperText: "The image should never get cropped"
    }, {
      label: "cover",
      value: "cover",
      helperText: "The image should fill it's box, cropping when needed"
    }]
  }, {
    name: "backgroundPosition",
    type: "text",
    defaultValue: "center",
    enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"]
  }, {
    name: "altText",
    type: "string",
    helperText: "Text to display when the user has images off"
  }, {
    name: "title",
    type: "string",
    helperText: "Text to display when hovering over the asset"
  }, {
    name: "aspectRatio",
    type: "number",
    helperText: "This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio",
    advanced: !0,
    defaultValue: 0.7041
  }],
  noWrap: !0
}, fi = y({
  name: "builder-img-component",
  props: [
    "imgSrc",
    "image",
    "attributes",
    "altText",
    "title",
    "backgroundSize",
    "backgroundPosition",
    "aspectRatio"
  ],
  data() {
    return { isEditing: A };
  },
  computed: {
    srcSetToUse() {
      const e = this.imgSrc || this.image;
      if (!(!e || typeof e != "string") && e.match(/builder\.io/))
        return ne(e);
    },
    imgAttrs() {
      const e = {
        ...N(this.attributes, "v-on:", !1),
        ...N(this.attributes, "v-on:", !0),
        [j()]: `builder-raw-img ${this.attributes[j()] || ""}`
      };
      return delete e.style, e;
    }
  }
}), bi = ["alt", "title", "src"];
function gi(e, t, n, o, r, i) {
  var s;
  return d(), h("img", w({
    loading: "lazy",
    key: e.isEditing() && e.imgSrc || "default-key",
    alt: e.altText,
    title: e.title,
    src: e.imgSrc || e.image,
    style: {
      objectFit: e.backgroundSize || "cover",
      objectPosition: e.backgroundPosition || "center",
      aspectRatio: e.aspectRatio || void 0,
      ...((s = e.attributes) == null ? void 0 : s.style) || {}
    }
  }, e.imgAttrs), null, 16, bi);
}
const yi = /* @__PURE__ */ v(fi, [["render", gi]]), vi = {
  name: "Video",
  canHaveChildren: !0,
  defaultStyles: {
    minHeight: "20px",
    minWidth: "20px"
  },
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb",
  inputs: [{
    name: "video",
    type: "file",
    allowedFileTypes: ir,
    bubble: !0,
    defaultValue: "https://cdn.builder.io/o/assets%2FYJIGb4i01jvw0SRdL5Bt%2Fd27731a526464deba0016216f5f9e570%2Fcompressed?apiKey=YJIGb4i01jvw0SRdL5Bt&token=d27731a526464deba0016216f5f9e570&alt=media&optimized=true",
    required: !0
  }, {
    name: "posterImage",
    type: "file",
    allowedFileTypes: Ae,
    helperText: "Image to show before the video plays"
  }, {
    name: "autoPlay",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "controls",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "muted",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "loop",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "playsInline",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "fit",
    type: "text",
    defaultValue: "cover",
    enum: ["contain", "cover", "fill", "auto"]
  }, {
    name: "preload",
    type: "text",
    defaultValue: "metadata",
    enum: ["auto", "metadata", "none"]
  }, {
    name: "fitContent",
    type: "boolean",
    helperText: "When child blocks are provided, fit to them instead of using the aspect ratio",
    defaultValue: !0,
    advanced: !0
  }, {
    name: "position",
    type: "text",
    defaultValue: "center",
    enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"]
  }, {
    name: "height",
    type: "number",
    advanced: !0
  }, {
    name: "width",
    type: "number",
    advanced: !0
  }, {
    name: "aspectRatio",
    type: "number",
    advanced: !0,
    defaultValue: 0.7004048582995948
  }, {
    name: "lazyLoad",
    type: "boolean",
    helperText: 'Load this video "lazily" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption',
    defaultValue: !0,
    advanced: !0
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0
  }
}, Si = y({
  name: "builder-video",
  props: [
    "lazyLoad",
    "autoPlay",
    "muted",
    "controls",
    "loop",
    "playsInline",
    "preload",
    "attributes",
    "fit",
    "position",
    "aspectRatio",
    "posterImage",
    "video",
    "fitContent",
    "builderBlock"
  ],
  data() {
    return { lazyVideoObserver: void 0 };
  },
  mounted() {
    if (this.lazyLoad) {
      const e = new IntersectionObserver(function(t) {
        t.forEach(function(n) {
          if (!n.isIntersecting)
            return;
          const o = n.target;
          try {
            Array.from(o.children).filter(
              (r) => r instanceof HTMLElement && r.tagName === "SOURCE"
            ).forEach((r) => {
              const i = r.dataset.src;
              i && (r.src = i);
            }), o.load(), e.unobserve(o);
          } catch (r) {
            console.error("Error loading lazy video:", r);
          }
        });
      });
      this.$refs.videoRef && e.observe(this.$refs.videoRef), this.lazyVideoObserver = e;
    }
  },
  unmounted() {
    this.lazyVideoObserver && this.lazyVideoObserver.disconnect();
  },
  computed: {
    videoProps() {
      return {
        ...this.autoPlay === !0 ? {
          autoPlay: !0
        } : {},
        ...this.muted === !0 ? {
          muted: !0
        } : {},
        ...this.controls === !0 ? {
          controls: !0
        } : {},
        ...this.loop === !0 ? {
          loop: !0
        } : {},
        ...this.playsInline === !0 ? {
          playsInline: !0
        } : {}
      };
    },
    spreadProps() {
      return {
        ...this.videoProps
      };
    }
  }
}), ki = { style: {
  position: "relative"
} }, Ci = ["preload", "poster"], Ti = {
  key: 1,
  style: {
    display: "flex",
    flexDirection: "column",
    alignItems: "stretch"
  }
}, Ii = {
  key: 2,
  style: {
    pointerEvents: "none",
    display: "flex",
    flexDirection: "column",
    alignItems: "stretch",
    position: "absolute",
    top: "0",
    left: "0",
    width: "100%",
    height: "100%"
  }
};
function wi(e, t, n, o, r, i) {
  var s, l, a, u, p, f, c;
  return d(), h("div", ki, [
    z("video", w({
      class: "builder-video",
      ref: "videoRef",
      preload: e.lazyLoad ? "none" : e.preload || "metadata",
      style: {
        width: "100%",
        height: "100%",
        ...(s = e.attributes) == null ? void 0 : s.style,
        objectFit: e.fit,
        objectPosition: e.position,
        // Hack to get object fit to work as expected and
        // not have the video overflow
        borderRadius: "1px",
        ...e.aspectRatio ? {
          position: "absolute"
        } : null
      },
      poster: e.posterImage
    }, e.spreadProps), [
      z("source", w(
        { type: "video/mp4" },
        e.lazyLoad ? {
          "data-src": e.video
        } : {
          src: e.video
        }
      ), null, 16)
    ], 16, Ci),
    e.aspectRatio && !(e.fitContent && ((a = (l = e.builderBlock) == null ? void 0 : l.children) != null && a.length)) ? (d(), h("div", {
      key: 0,
      style: M({
        width: "100%",
        paddingTop: e.aspectRatio * 100 + "%",
        pointerEvents: "none",
        fontSize: "0px"
      })
    }, null, 4)) : C("", !0),
    (p = (u = e.builderBlock) == null ? void 0 : u.children) != null && p.length && e.fitContent ? (d(), h("div", Ti, [
      V(e.$slots, "default")
    ])) : C("", !0),
    (c = (f = e.builderBlock) == null ? void 0 : f.children) != null && c.length && !e.fitContent ? (d(), h("div", Ii, [
      V(e.$slots, "default")
    ])) : C("", !0)
  ]);
}
const $i = /* @__PURE__ */ v(Si, [["render", wi]]), Ri = () => [{
  component: Vr,
  ...Er
}, {
  component: Fr,
  ...Nr
}, {
  component: Gr,
  ...Lr
}, {
  component: Zr,
  ...Jr
}, {
  component: li,
  ...ii
}, {
  component: ri,
  ..._r
}, {
  component: mi,
  ...ci
}, {
  component: yi,
  ...hi
}, {
  component: $i,
  ...vi
}], He = () => [{
  component: jt,
  ...nr
}, {
  component: wo,
  ...or
}, {
  component: Eo,
  ...rr
}, {
  component: Do,
  ...sr
}, {
  component: Fo,
  ...ur
}, {
  component: fr,
  ...pr
}, {
  component: us,
  ...br
}, {
  component: Rr,
  ...Tr
}, ...kt.includes($) ? [{
  component: dr,
  ...ar
}] : [], {
  component: Cr,
  ...gr
}, {
  component: tr,
  ...Yo
}, ...Ri()], Ei = `function updateCookiesAndStyles(contentId, variants, isHydrationTarget, isAngularSDK) {
  function getAndSetVariantId() {
    function setCookie(name, value, days) {
      let expires = '';
      if (days) {
        const date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        expires = '; expires=' + date.toUTCString();
      }
      document.cookie = name + '=' + (value || '') + expires + '; path=/' + '; Secure; SameSite=None';
    }
    function getCookie(name) {
      const nameEQ = name + '=';
      const ca = document.cookie.split(';');
      for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
      }
      return null;
    }
    const cookieName = \`builder.tests.\${contentId}\`;
    const variantInCookie = getCookie(cookieName);
    const availableIDs = variants.map(vr => vr.id).concat(contentId);
    if (variantInCookie && availableIDs.includes(variantInCookie)) {
      return variantInCookie;
    }
    let n = 0;
    const random = Math.random();
    for (let i = 0; i < variants.length; i++) {
      const variant = variants[i];
      const testRatio = variant.testRatio;
      n += testRatio;
      if (random < n) {
        setCookie(cookieName, variant.id);
        return variant.id;
      }
    }
    setCookie(cookieName, contentId);
    return contentId;
  }
  const winningVariantId = getAndSetVariantId();
  let styleEl = document.currentScript?.previousElementSibling;
  if (isAngularSDK) {
    styleEl = document.currentScript?.parentElement?.previousElementSibling?.querySelector('style');
  }
  if (isHydrationTarget) {
    styleEl.remove();
    const thisScriptEl = document.currentScript;
    thisScriptEl?.remove();
  } else {
    const newStyleStr = variants.concat({
      id: contentId
    }).filter(variant => variant.id !== winningVariantId).map(value => {
      return \`.variant-\${value.id} {  display: none; }
        \`;
    }).join('');
    styleEl.innerHTML = newStyleStr;
  }
}`, Ai = `function updateVariantVisibility(variantContentId, defaultContentId, isHydrationTarget) {
  if (!navigator.cookieEnabled) {
    return;
  }
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) === ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const cookieName = \`builder.tests.\${defaultContentId}\`;
  const winningVariant = getCookie(cookieName);
  const parentDiv = document.currentScript?.parentElement;
  const isDefaultContent = variantContentId === defaultContentId;
  const isWinningVariant = winningVariant === variantContentId;
  if (isWinningVariant && !isDefaultContent) {
    parentDiv?.removeAttribute('hidden');
    parentDiv?.removeAttribute('aria-hidden');
  } else if (!isWinningVariant && isDefaultContent) {
    parentDiv?.setAttribute('hidden', 'true');
    parentDiv?.setAttribute('aria-hidden', 'true');
  }
  if (isHydrationTarget) {
    if (!isWinningVariant) {
      parentDiv?.remove();
    }
    const thisScriptEl = document.currentScript;
    thisScriptEl?.remove();
  }
  return;
}`, It = "builderIoAbTest", wt = "builderIoRenderContent", re = (e) => Object.values((e == null ? void 0 : e.variations) || {}).map((t) => ({
  ...t,
  testVariationId: t.id,
  id: e == null ? void 0 : e.id
})), Pi = ({
  canTrack: e,
  content: t
}) => !(!(re(t).length > 0) || !e), Bi = (e) => e === "react" || e === "reactNative", Vi = $ === "angular", $t = Bi($), Ni = () => `
  window.${It} = ${Ei}
  window.${wt} = ${Ai}
  `, xi = (e, t) => `
  window.${It}(
    "${t}",${JSON.stringify(e)}, ${$t}, ${Vi}
  )`, Wi = ({
  contentId: e,
  variationId: t
}) => `window.${wt}(
    "${t}", "${e}", ${$t}
  )`;
function Me(e) {
  return Math.round(e * 1e3) / 1e3;
}
const Di = (e, t, n = !0) => {
  if (!(e instanceof HTMLElement))
    return null;
  let o = n ? e : e.parentElement;
  do {
    if (!o)
      return null;
    if (t(o))
      return o;
  } while (o = o.parentElement);
  return null;
}, Oi = (e) => Di(e, (t) => {
  const n = t.getAttribute("builder-id") || t.id;
  return (n == null ? void 0 : n.indexOf("builder-")) === 0;
}), je = ({
  event: e,
  target: t
}) => {
  const n = t.getBoundingClientRect(), o = e.clientX - n.left, r = e.clientY - n.top, i = Me(o / n.width), s = Me(r / n.height);
  return {
    x: i,
    y: s
  };
}, Ui = (e) => {
  const t = e.target, n = t && Oi(t), o = (n == null ? void 0 : n.getAttribute("builder-id")) || (n == null ? void 0 : n.id);
  return {
    targetBuilderElement: o || void 0,
    metadata: {
      targetOffset: t ? je({
        event: e,
        target: t
      }) : void 0,
      builderTargetOffset: n ? je({
        event: e,
        target: n
      }) : void 0,
      builderElementIndex: n && o ? [].slice.call(document.getElementsByClassName(o)).indexOf(n) : void 0
    }
  };
}, Fi = ["svelte", "qwik", "vue"], Li = () => Fi.includes($) && (A() || Ce()), Hi = (e) => {
  var i;
  const t = e.family + (e.kind && !e.kind.includes("#") ? ", " + e.kind : ""), n = t.split(",")[0], o = e.fileUrl ?? ((i = e == null ? void 0 : e.files) == null ? void 0 : i.regular);
  let r = "";
  if (o && t && n && (r += `
@font-face {
font-family: "${t}";
src: local("${n}"), url('${o}') format('woff2');
font-display: fallback;
font-weight: 400;
}
      `.trim()), e.files)
    for (const s in e.files) {
      if (!(String(Number(s)) === s))
        continue;
      const a = e.files[s];
      a && a !== o && (r += `
@font-face {
font-family: "${t}";
src: url('${a}') format('woff2');
font-display: fallback;
font-weight: ${s};
}
        `.trim());
    }
  return r;
}, Mi = ({
  customFonts: e
}) => {
  var t;
  return ((t = e == null ? void 0 : e.map((n) => Hi(n))) == null ? void 0 : t.join(" ")) || "";
}, ji = ({
  cssCode: e,
  contentId: t
}) => e ? t ? (e == null ? void 0 : e.replace(/&/g, `div[builder-content-id="${t}"]`)) || "" : e : "", Ki = `
.builder-button {
  all: unset;
}

.builder-text > p:first-of-type, .builder-text > .builder-paragraph:first-of-type {
  margin: 0;
}
.builder-text > p, .builder-text > .builder-paragraph {
  color: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  font-weight: inherit;
  font-size: inherit;
  text-align: inherit;
  font-family: inherit;
}
`, qi = (e) => e ? "" : Ki, zi = (e) => `variant-${e}`, Gi = y({
  name: "enable-editor",
  components: { DynamicDiv: te },
  props: [
    "isNestedRender",
    "builderContextSignal",
    "canTrack",
    "apiKey",
    "apiHost",
    "locale",
    "enrich",
    "trustedHosts",
    "model",
    "content",
    "context",
    "data",
    "showContent",
    "contentWrapper",
    "contentWrapperProps"
  ],
  data() {
    return {
      hasExecuted: !1,
      contextValue: this.builderContextSignal,
      prevData: null,
      prevLocale: "",
      ContentWrapper: this.contentWrapper || "div",
      httpReqsData: {},
      httpReqsPending: {},
      clicked: !1,
      builderContext: fe,
      needsElementRefDivForEditing: Li,
      getWrapperClassName: zi
    };
  },
  provide() {
    const e = this;
    return {
      [fe.key]: e.builderContextSignal
    };
  },
  created() {
    this.runHttpRequests(), this.emitStateUpdate();
  },
  mounted() {
    var e, t, n;
    if (R()) {
      A() && !this.isNestedRender && this.$refs.elementRef && this.$refs.elementRef.dispatchEvent(
        new CustomEvent("initeditingbldr")
      );
      const o = this.builderContextSignal.content && G(this.canTrack), r = ce({
        name: `builder.tests.${(e = this.builderContextSignal.content) == null ? void 0 : e.id}`,
        canTrack: !0
      }), i = (t = this.builderContextSignal.content) == null ? void 0 : t.testVariationId;
      if (o && i === r) {
        const s = (n = this.builderContextSignal.content) == null ? void 0 : n.id, l = this.apiKey;
        ge({
          apiHost: this.apiHost,
          type: "impression",
          canTrack: !0,
          contentId: s,
          apiKey: l,
          variationId: r !== s ? r : void 0
        });
      }
      Ce() && !A() && this.$refs.elementRef && this.$refs.elementRef.dispatchEvent(
        new CustomEvent("initpreviewingbldr")
      );
    }
  },
  watch: {
    onUpdateHook0: {
      handler() {
        this.content && this.mergeNewContent(this.content);
      },
      immediate: !0
    },
    onUpdateHook1: {
      handler() {
        this.emitStateUpdate();
      },
      immediate: !0
    },
    onUpdateHook2: {
      handler() {
        if (this.data) {
          if (this.prevData === this.data)
            return;
          this.mergeNewRootState(this.data), this.prevData = this.data;
        }
      },
      immediate: !0
    },
    onUpdateHook3: {
      handler() {
        if (this.locale) {
          if (this.prevLocale === this.locale)
            return;
          this.mergeNewRootState({
            locale: this.locale
          }), this.prevLocale = this.locale;
        }
      },
      immediate: !0
    }
  },
  unmounted() {
    R() && (window.removeEventListener("message", this.processMessage), window.removeEventListener(
      "builder:component:stateChangeListenerActivated",
      this.emitStateUpdate
    ));
  },
  computed: {
    showContentProps() {
      return this.showContent ? {} : {
        hidden: !0,
        "aria-hidden": !0
      };
    },
    onUpdateHook0() {
      return {
        0: this.content
      };
    },
    onUpdateHook1() {
      return {
        0: this.builderContextSignal.rootState
      };
    },
    onUpdateHook2() {
      return {
        0: this.data
      };
    },
    onUpdateHook3() {
      return {
        0: this.locale
      };
    }
  },
  methods: {
    mergeNewRootState(e, t) {
      var o, r;
      const n = {
        ...this.builderContextSignal.rootState,
        ...e
      };
      this.builderContextSignal.rootSetState ? (r = (o = this.builderContextSignal).rootSetState) == null || r.call(o, n) : this.builderContextSignal.rootState = n, this.builderContextSignal.rootSetState ? this.builderContextSignal.rootSetState(n) : this.builderContextSignal.rootState = n;
    },
    mergeNewContent(e, t) {
      var o, r, i, s, l;
      const n = {
        ...this.builderContextSignal.content,
        ...e,
        data: {
          ...(o = this.builderContextSignal.content) == null ? void 0 : o.data,
          ...e == null ? void 0 : e.data
        },
        meta: {
          ...(r = this.builderContextSignal.content) == null ? void 0 : r.meta,
          ...e == null ? void 0 : e.meta,
          breakpoints: ((i = e == null ? void 0 : e.meta) == null ? void 0 : i.breakpoints) || ((l = (s = this.builderContextSignal.content) == null ? void 0 : s.meta) == null ? void 0 : l.breakpoints)
        }
      };
      this.builderContextSignal.content = n;
    },
    processMessage(e) {
      return st({
        model: this.model,
        trustedHosts: this.trustedHosts,
        callbacks: {
          configureSdk: (t) => {
            var r;
            const { breakpoints: n, contentId: o } = t;
            !o || o !== ((r = this.builderContextSignal.content) == null ? void 0 : r.id) || n && this.mergeNewContent({
              meta: {
                breakpoints: n
              }
            });
          },
          animation: (t) => {
            mt(t);
          },
          contentUpdate: (t, n) => {
            this.mergeNewContent(t, n);
          },
          stateUpdate: (t, n) => {
            this.mergeNewRootState(t, n);
          }
        }
      })(e);
    },
    onClick(e) {
      var t, n;
      if (this.builderContextSignal.content) {
        const o = (t = this.builderContextSignal.content) == null ? void 0 : t.testVariationId, r = (n = this.builderContextSignal.content) == null ? void 0 : n.id;
        ge({
          apiHost: this.apiHost,
          type: "click",
          canTrack: G(this.canTrack),
          contentId: r,
          apiKey: this.apiKey,
          variationId: o !== r ? o : void 0,
          ...Ui(e),
          unique: !this.clicked
        });
      }
      this.clicked || (this.clicked = !0);
    },
    runHttpRequests() {
      var t, n;
      const e = ((n = (t = this.builderContextSignal.content) == null ? void 0 : t.data) == null ? void 0 : n.httpRequests) ?? {};
      Object.entries(e).forEach(
        ([o, r]) => {
          if (!r)
            return;
          const i = typeof r == "object" && r["@type"] === "@builder.io/core:Request";
          if (this.httpReqsPending[o] || this.httpReqsData[o] && !A())
            return;
          const s = i ? r.request.url : r;
          this.httpReqsPending[o] = !0;
          const l = s.replace(
            /{{([^}]+)}}/g,
            (p, f) => String(
              ee({
                code: f,
                context: this.context || {},
                localState: void 0,
                rootState: this.builderContextSignal.rootState,
                rootSetState: this.builderContextSignal.rootSetState
              })
            )
          ), a = i ? {
            url: l,
            method: r.request.method,
            headers: r.request.headers,
            body: r.request.body
          } : {
            url: l,
            method: "GET"
          };
          Ie(JSON.stringify(a));
          const u = {
            method: a.method,
            headers: a.headers,
            body: a.body
          };
          a.method === "GET" && delete u.body, fetch(a.url, u).then((p) => p.json()).then((p) => {
            this.mergeNewRootState({
              [o]: p
            }), this.httpReqsData[o] = !0;
          }).catch((p) => {
            console.error(
              "error fetching dynamic data",
              JSON.stringify(r),
              p
            );
          }).finally(() => {
            this.httpReqsPending[o] = !1;
          });
        }
      );
    },
    emitStateUpdate() {
      A() && window.dispatchEvent(
        new CustomEvent(
          "builder:component:stateChange",
          {
            detail: {
              state: Se(this.builderContextSignal.rootState),
              ref: {
                name: this.model
              }
            }
          }
        )
      );
    },
    elementRef_onIniteditingbldr(e) {
      window.addEventListener("message", this.processMessage), it({
        ...this.locale ? {
          locale: this.locale
        } : {},
        ...this.enrich ? {
          enrich: this.enrich
        } : {},
        ...this.trustedHosts ? {
          trustedHosts: this.trustedHosts
        } : {},
        modelName: this.model ?? "",
        apiKey: this.apiKey
      }), Object.values(
        this.builderContextSignal.componentInfos
      ).forEach((t) => {
        var n, o;
        if (!((n = t.models) != null && n.length) || t.models.includes(this.model)) {
          const r = ln(t);
          (o = window.parent) == null || o.postMessage(r, "*");
        }
      }), window.addEventListener(
        "builder:component:stateChangeListenerActivated",
        this.emitStateUpdate
      );
    },
    elementRef_onInitpreviewingbldr(e) {
      var i;
      const t = new URL(location.href).searchParams, n = t.get("builder.preview"), o = t.get(
        `builder.overrides.${n}`
      ), r = t.get("apiKey") || t.get("builder.space");
      (n === "BUILDER_STUDIO" || n === this.model && r === this.apiKey && (!this.content || o === this.content.id)) && Re({
        model: this.model,
        apiKey: this.apiKey,
        apiVersion: this.builderContextSignal.apiVersion,
        ...n === "BUILDER_STUDIO" && ((i = this.context) != null && i.symbolId) ? {
          query: {
            id: this.context.symbolId
          }
        } : {}
      }).then((s) => {
        s && this.mergeNewContent(s);
      });
    }
  }
});
function Ji(e, t, n, o, r, i) {
  var s, l, a;
  return e.builderContextSignal.content || e.needsElementRefDivForEditing() ? (d(), S(X(e.ContentWrapper), w({
    key: 0,
    ref: "elementRef",
    onClick: (u) => e.onClick(u),
    "builder-content-id": (s = e.builderContextSignal.content) == null ? void 0 : s.id,
    "builder-model": e.model,
    className: e.getWrapperClassName(((l = e.content) == null ? void 0 : l.testVariationId) || ((a = e.content) == null ? void 0 : a.id)),
    style: {
      display: !e.builderContextSignal.content && e.needsElementRefDivForEditing() ? "none" : void 0
    },
    onIniteditingbldr: (u) => e.elementRef_onIniteditingbldr(u),
    onInitpreviewingbldr: (u) => e.elementRef_onInitpreviewingbldr(u)
  }, { ...e.showContentProps, ...e.contentWrapperProps }), {
    default: O(() => [
      V(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["onClick", "builder-content-id", "builder-model", "className", "style", "onIniteditingbldr", "onInitpreviewingbldr"])) : C("", !0);
}
const Qi = /* @__PURE__ */ v(Gi, [["render", Ji]]), Yi = y({
  name: "content-styles",
  components: { InlinedStyles: de },
  props: ["cssCode", "contentId", "customFonts", "isNestedRender", "nonce"],
  data() {
    return {
      injectedStyles: `
${ji({
        cssCode: this.cssCode,
        contentId: this.contentId
      })}
${Mi({
        customFonts: this.customFonts
      })}
${qi(this.isNestedRender)}
`.trim()
    };
  }
});
function Xi(e, t, n, o, r, i) {
  const s = k("InlinedStyles");
  return d(), S(s, {
    id: "builderio-content",
    styles: e.injectedStyles,
    nonce: e.nonce
  }, null, 8, ["styles", "nonce"]);
}
const Zi = /* @__PURE__ */ v(Yi, [["render", Xi]]), _i = ({
  content: e,
  data: t,
  locale: n
}) => {
  var i, s, l;
  const o = {}, r = ((i = e == null ? void 0 : e.data) == null ? void 0 : i.state) || {};
  return (l = (s = e == null ? void 0 : e.data) == null ? void 0 : s.inputs) == null || l.forEach((a) => {
    a.name && a.defaultValue !== void 0 && (o[a.name] = a.defaultValue);
  }), {
    ...o,
    ...r,
    ...t,
    ...n ? {
      locale: n
    } : {}
  };
}, es = ({
  content: e,
  data: t
}) => e ? {
  ...e,
  data: {
    ...e == null ? void 0 : e.data,
    ...t
  },
  meta: e == null ? void 0 : e.meta
} : void 0, ts = Et, ns = y({
  name: "content-component",
  components: {
    EnableEditor: Qi,
    InlinedScript: Pe,
    ContentStyles: Zi,
    Blocks: q,
    DynamicDiv: te
  },
  props: [
    "apiKey",
    "context",
    "content",
    "customComponents",
    "data",
    "locale",
    "canTrack",
    "apiVersion",
    "blocksWrapper",
    "blocksWrapperProps",
    "nonce",
    "model",
    "apiHost",
    "enrich",
    "showContent",
    "contentWrapper",
    "contentWrapperProps",
    "trustedHosts",
    "isNestedRender",
    "isSsrAbTest",
    "linkComponent"
  ],
  data() {
    var e, t;
    return {
      scriptStr: Wi({
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain
        variationId: (e = this.content) == null ? void 0 : e.testVariationId,
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain
        contentId: (t = this.content) == null ? void 0 : t.id
      }),
      registeredComponents: [
        ...He(),
        ...this.customComponents || []
      ].reduce(
        (n, { component: o, ...r }) => ({
          ...n,
          [r.name]: {
            component: ts(o),
            ...se(r)
          }
        }),
        {}
      ),
      builderContextSignal: {
        content: es({
          content: this.content,
          data: this.data
        }),
        localState: void 0,
        rootState: _i({
          content: this.content,
          data: this.data,
          locale: this.locale
        }),
        rootSetState: this.contentSetState,
        context: this.context || {},
        canTrack: this.canTrack,
        apiKey: this.apiKey,
        apiVersion: this.apiVersion,
        componentInfos: [
          ...He(),
          ...this.customComponents || []
        ].reduce(
          (n, { component: o, ...r }) => ({
            ...n,
            [r.name]: se(r)
          }),
          {}
        ),
        inheritedStyles: {},
        BlocksWrapper: this.blocksWrapper || "div",
        BlocksWrapperProps: this.blocksWrapperProps || {},
        nonce: this.nonce || "",
        model: this.model
      },
      TARGET: $
    };
  },
  provide() {
    const e = this;
    return {
      [Ge.key]: {
        registeredComponents: e.registeredComponents
      }
    };
  },
  created() {
    var t, n;
    this.apiKey || x.error(
      "No API key provided to `Content` component. This can cause issues. Please provide an API key using the `apiKey` prop."
    );
    const e = (n = (t = this.builderContextSignal.content) == null ? void 0 : t.data) == null ? void 0 : n.jsCode;
    e && ee({
      code: e,
      context: this.context || {},
      localState: void 0,
      rootState: this.builderContextSignal.rootState,
      rootSetState: (o) => {
        this.builderContextSignal.rootState = o;
      },
      isExpression: !1
    });
  },
  methods: {
    contentSetState(e) {
      this.builderContextSignal.rootState = e;
    }
  }
});
function os(e, t, n, o, r, i) {
  const s = k("InlinedScript"), l = k("ContentStyles"), a = k("Blocks"), u = k("EnableEditor");
  return d(), S(u, w({
    apiHost: e.apiHost,
    nonce: e.nonce,
    content: e.content,
    data: e.data,
    model: e.model,
    context: e.context,
    apiKey: e.apiKey,
    canTrack: e.canTrack,
    locale: e.locale,
    enrich: e.enrich,
    showContent: e.showContent,
    builderContextSignal: e.builderContextSignal,
    contentWrapper: e.contentWrapper,
    contentWrapperProps: e.contentWrapperProps,
    trustedHosts: e.trustedHosts,
    isNestedRender: e.isNestedRender
  }, {}), {
    default: O(() => {
      var p, f, c, m, b, g, P;
      return [
        e.isSsrAbTest ? (d(), S(s, {
          key: 0,
          id: "builderio-variant-visibility",
          scriptStr: e.scriptStr,
          nonce: e.nonce || ""
        }, null, 8, ["scriptStr", "nonce"])) : C("", !0),
        e.TARGET !== "reactNative" ? (d(), S(l, {
          key: 1,
          nonce: e.nonce || "",
          isNestedRender: e.isNestedRender,
          contentId: (p = e.builderContextSignal.content) == null ? void 0 : p.id,
          cssCode: (c = (f = e.builderContextSignal.content) == null ? void 0 : f.data) == null ? void 0 : c.cssCode,
          customFonts: (b = (m = e.builderContextSignal.content) == null ? void 0 : m.data) == null ? void 0 : b.customFonts
        }, null, 8, ["nonce", "isNestedRender", "contentId", "cssCode", "customFonts"])) : C("", !0),
        E(a, {
          blocks: (P = (g = e.builderContextSignal.content) == null ? void 0 : g.data) == null ? void 0 : P.blocks,
          context: e.builderContextSignal,
          registeredComponents: e.registeredComponents,
          linkComponent: e.linkComponent
        }, null, 8, ["blocks", "context", "registeredComponents", "linkComponent"])
      ];
    }),
    _: 1
  }, 16, ["apiHost", "nonce", "content", "data", "model", "context", "apiKey", "canTrack", "locale", "enrich", "showContent", "builderContextSignal", "contentWrapper", "contentWrapperProps", "trustedHosts", "isNestedRender"]);
}
const rs = /* @__PURE__ */ v(ns, [["render", os]]), is = y({
  name: "content-variants",
  components: {
    InlinedScript: Pe,
    InlinedStyles: de,
    ContentComponent: rs
  },
  props: [
    "canTrack",
    "content",
    "isNestedRender",
    "nonce",
    "apiHost",
    "model",
    "data",
    "context",
    "apiKey",
    "apiVersion",
    "customComponents",
    "linkComponent",
    "locale",
    "enrich",
    "blocksWrapper",
    "blocksWrapperProps",
    "contentWrapper",
    "contentWrapperProps",
    "trustedHosts"
  ],
  data() {
    return {
      shouldRenderVariants: Pi({
        canTrack: G(this.canTrack),
        content: this.content
      }),
      SDKS_SUPPORTING_PERSONALIZATION: kt,
      getInitPersonalizationVariantsFnsScriptString: Go,
      TARGET: $,
      getInitVariantsFnsScriptString: Ni,
      getVariants: re
    };
  },
  mounted() {
  },
  computed: {
    updateCookieAndStylesScriptStr() {
      var e;
      return xi(
        re(this.content).map((t) => ({
          id: t.testVariationId,
          testRatio: t.testRatio
        })),
        ((e = this.content) == null ? void 0 : e.id) || ""
      );
    },
    hideVariantsStyleString() {
      return re(this.content).map((e) => `.variant-${e.testVariationId} { display: none; } `).join("");
    },
    defaultContent() {
      var e;
      return this.shouldRenderVariants ? {
        ...this.content,
        testVariationId: (e = this.content) == null ? void 0 : e.id
      } : Nn({
        item: this.content,
        canTrack: G(this.canTrack)
      });
    }
  }
});
function ss(e, t, n, o, r, i) {
  const s = k("InlinedScript"), l = k("InlinedStyles"), a = k("ContentComponent");
  return d(), h(I, null, [
    !e.isNestedRender && e.TARGET !== "reactNative" ? (d(), h(I, { key: 0 }, [
      E(s, {
        id: "builderio-init-variants-fns",
        scriptStr: e.getInitVariantsFnsScriptString(),
        nonce: e.nonce || ""
      }, null, 8, ["scriptStr", "nonce"]),
      e.SDKS_SUPPORTING_PERSONALIZATION.includes(e.TARGET) ? (d(), S(s, {
        key: 0,
        id: "builderio-init-personalization-variants-fns",
        nonce: e.nonce || "",
        scriptStr: e.getInitPersonalizationVariantsFnsScriptString()
      }, null, 8, ["nonce", "scriptStr"])) : C("", !0)
    ], 64)) : C("", !0),
    e.shouldRenderVariants ? (d(), h(I, { key: 1 }, [
      E(l, {
        id: "builderio-variants",
        styles: e.hideVariantsStyleString,
        nonce: e.nonce || ""
      }, null, 8, ["styles", "nonce"]),
      E(s, {
        id: "builderio-variants-visibility",
        scriptStr: e.updateCookieAndStylesScriptStr,
        nonce: e.nonce || ""
      }, null, 8, ["scriptStr", "nonce"]),
      (d(!0), h(I, null, L(e.getVariants(e.content), (u, p) => (d(), S(a, w({
        key: u.testVariationId,
        apiHost: e.apiHost,
        isNestedRender: e.isNestedRender,
        nonce: e.nonce,
        content: u,
        showContent: !1,
        model: e.model,
        data: e.data,
        context: e.context,
        apiKey: e.apiKey,
        apiVersion: e.apiVersion,
        customComponents: e.customComponents,
        linkComponent: e.linkComponent,
        canTrack: e.canTrack,
        locale: e.locale,
        enrich: e.enrich,
        isSsrAbTest: e.shouldRenderVariants,
        blocksWrapper: e.blocksWrapper,
        blocksWrapperProps: e.blocksWrapperProps,
        contentWrapper: e.contentWrapper,
        contentWrapperProps: e.contentWrapperProps,
        trustedHosts: e.trustedHosts
      }, {}), null, 16, ["apiHost", "isNestedRender", "nonce", "content", "model", "data", "context", "apiKey", "apiVersion", "customComponents", "linkComponent", "canTrack", "locale", "enrich", "isSsrAbTest", "blocksWrapper", "blocksWrapperProps", "contentWrapper", "contentWrapperProps", "trustedHosts"]))), 128))
    ], 64)) : C("", !0),
    E(a, w({
      apiHost: e.apiHost,
      nonce: e.nonce,
      isNestedRender: e.isNestedRender,
      content: e.defaultContent,
      showContent: !0,
      model: e.model,
      data: e.data,
      context: e.context,
      apiKey: e.apiKey,
      apiVersion: e.apiVersion,
      customComponents: e.customComponents,
      linkComponent: e.linkComponent,
      canTrack: e.canTrack,
      locale: e.locale,
      enrich: e.enrich,
      isSsrAbTest: e.shouldRenderVariants,
      blocksWrapper: e.blocksWrapper,
      blocksWrapperProps: e.blocksWrapperProps,
      contentWrapper: e.contentWrapper,
      contentWrapperProps: e.contentWrapperProps,
      trustedHosts: e.trustedHosts
    }, {
      key: e.shouldRenderVariants.toString()
    }), null, 16, ["apiHost", "nonce", "isNestedRender", "content", "model", "data", "context", "apiKey", "apiVersion", "customComponents", "linkComponent", "canTrack", "locale", "enrich", "isSsrAbTest", "blocksWrapper", "blocksWrapperProps", "contentWrapper", "contentWrapperProps", "trustedHosts"])
  ], 64);
}
const as = /* @__PURE__ */ v(is, [["render", ss]]), ls = async ({
  builderContextValue: e,
  symbol: t
}) => {
  if (t != null && t.model && // This is a hack, we should not need to check for this, but it is needed for Svelte.
  (e != null && e.apiKey))
    return Re({
      model: t.model,
      apiKey: e.apiKey,
      apiVersion: e.apiVersion,
      ...(t == null ? void 0 : t.entry) && {
        query: {
          id: t.entry
        }
      }
    }).catch((n) => {
      x.error("Could not fetch symbol content: ", n);
    });
}, cs = y({
  name: "builder-symbol",
  components: { ContentVariants: as, DynamicDiv: te },
  props: [
    "symbol",
    "builderComponents",
    "attributes",
    "dynamic",
    "builderContext",
    "builderBlock",
    "builderLinkComponent"
  ],
  data() {
    var e, t;
    return {
      contentToUse: (e = this.symbol) == null ? void 0 : e.content,
      symbolEntry: (t = this.symbol) == null ? void 0 : t.entry,
      filterAttrs: N
    };
  },
  mounted() {
    this.setContent();
  },
  watch: {
    onUpdateHook0: {
      handler() {
        this.setContent();
      },
      immediate: !0
    }
  },
  computed: {
    blocksWrapper() {
      return "div";
    },
    contentWrapper() {
      return "div";
    },
    customComponents() {
      return Object.values(this.builderComponents);
    },
    className() {
      var e, t;
      return [
        this.attributes[j()],
        "builder-symbol",
        (e = this.symbol) != null && e.inline ? "builder-inline-symbol" : void 0,
        (t = this.symbol) != null && t.dynamic || this.dynamic ? "builder-dynamic-symbol" : void 0
      ].filter(Boolean).join(" ");
    },
    onUpdateHook0() {
      return {
        0: this.symbol
      };
    }
  },
  methods: {
    setContent() {
      var e;
      this.contentToUse && this.symbolEntry === ((e = this.symbol) == null ? void 0 : e.entry) || ls({
        symbol: this.symbol,
        builderContextValue: this.builderContext
      }).then((t) => {
        var n;
        t && (this.contentToUse = t, this.symbolEntry = (n = this.symbol) == null ? void 0 : n.entry);
      });
    }
  }
});
function ds(e, t, n, o, r, i) {
  var l, a, u, p, f;
  const s = k("ContentVariants");
  return d(), h("div", w({ class: e.className }, { ...e.filterAttrs(e.attributes, "v-on:", !1) }, F(e.filterAttrs(e.attributes, "v-on:", !0), !0)), [
    E(s, {
      nonce: e.builderContext.nonce,
      isNestedRender: !0,
      apiVersion: e.builderContext.apiVersion,
      apiKey: e.builderContext.apiKey,
      context: {
        ...e.builderContext.context,
        symbolId: (l = e.builderBlock) == null ? void 0 : l.id
      },
      customComponents: e.customComponents,
      data: {
        ...(a = e.symbol) == null ? void 0 : a.data,
        ...e.builderContext.localState,
        ...(p = (u = e.contentToUse) == null ? void 0 : u.data) == null ? void 0 : p.state
      },
      canTrack: e.builderContext.canTrack,
      model: ((f = e.symbol) == null ? void 0 : f.model) ?? "",
      content: e.contentToUse,
      linkComponent: e.builderLinkComponent,
      blocksWrapper: e.blocksWrapper,
      contentWrapper: e.contentWrapper
    }, null, 8, ["nonce", "apiVersion", "apiKey", "context", "customComponents", "data", "canTrack", "model", "content", "linkComponent", "blocksWrapper", "contentWrapper"])
  ], 16);
}
const us = /* @__PURE__ */ v(cs, [["render", ds]]);
export {
  qn as A,
  gt as B,
  wo as C,
  Re as D,
  hs as E,
  Eo as F,
  Is as G,
  Do as I,
  Fo as S,
  Rr as T,
  $i as V,
  v as _,
  j as a,
  fe as b,
  de as c,
  ko as d,
  ee as e,
  Cs as f,
  Ts as g,
  ws as h,
  Ee as i,
  an as j,
  jt as k,
  us as l,
  q as m,
  as as n,
  Ce as o,
  ln as p,
  bs as q,
  fs as r,
  Ss as s,
  gs as t,
  Ye as u,
  ys as v,
  ts as w,
  vs as x,
  ks as y,
  Kn as z
};
