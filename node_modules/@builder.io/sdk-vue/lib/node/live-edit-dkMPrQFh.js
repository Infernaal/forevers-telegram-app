import { defineComponent as o, openBlock as r, createBlock as n, resolveDynamicComponent as i, mergeProps as s, withCtx as p, renderSlot as a } from "vue";
import { f as c } from "./find-block-3Ig0kVVe.js";
import { b as d, _ as l } from "./index-BtCfIIfO.js";
const m = o({
  name: "live-edit",
  props: ["id", "attributes", "Wrapper"],
  inject: {
    context: d.key
  },
  computed: {
    block() {
      return c(this.context.content, this.id);
    },
    options() {
      var t, e;
      return ((e = (t = this.block) == null ? void 0 : t.component) == null ? void 0 : e.options) || {};
    }
  }
});
function u(t, e, f, b, k, _) {
  return r(), n(i(t.Wrapper), s({ attributes: t.attributes }, t.options), {
    default: p(() => [
      a(t.$slots, "default")
    ]),
    _: 3
  }, 16, ["attributes"]);
}
const C = /* @__PURE__ */ l(m, [["render", u]]);
export {
  C as default
};
